{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeel\\\\mynodeproject\\\\data\\\\final_chat_applicaton\\\\final_chat_application\\\\client\\\\src\\\\pages\\\\register\\\\index.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport { Button, Col, Input, Row, Form } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { NavLink } from \"react-router-dom\";\nimport Comman from \"../../component/Comman/Comman\";\nimport InputDemo from \"../../component/Input/InputDemo\";\nimport { RegexList } from \"../../component/RegexList\";\nimport { setData } from \"../../core/locaStorage/Local\";\nimport \"../home/home.scss\";\nimport { RegisterStyle } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterPage = ({\n  socket\n}) => {\n  _s();\n\n  const [load, setLoad] = useState(false);\n  const [errorMsg, seterrorMsg] = useState(\"\");\n  const [animate, setanimate] = useState(false);\n  const [submitData, setSubmitData] = useState({});\n  const [submitted, setSubmitted] = useState(true);\n  const history = useHistory();\n\n  const onfinish = value => {\n    console.log(\"sdds\");\n    const res = RegexList.email.test(value.email);\n\n    if (res === true) {\n      setLoad(true);\n      setSubmitData(value);\n      setSubmitted(true);\n      setLoad(true);\n      socket.emit(\"register\", value);\n    } else {\n      setSubmitted(false);\n    }\n  };\n\n  useEffect(() => {\n    socket.on(\"userRegistration\", res => {\n      console.log(res, \"response\");\n\n      if (res.status) {\n        // socket.emit(\"login\", { email: value.email, password: value.password });\n        setSubmitData(prev => {\n          socket.emit(\"login\", {\n            email: prev.email,\n            password: prev.password\n          });\n          return prev;\n        }); // seterrorMsg(\"\");\n        // history.push(\"/\");\n      } else if (res.status === false) {\n        seterrorMsg(res.message);\n        setLoad(false);\n      }\n    });\n  }, [socket, history]);\n  useEffect(() => {\n    socket.on(\"userLogin\", res => {\n      if (res.status) {\n        setLoad(false);\n        setData(\"user\", res.data);\n        setData(\"status\", true);\n        seterrorMsg(\"\");\n        history.push(\"/chat\");\n      } else if (res.status === false) {\n        seterrorMsg(res.message);\n        setLoad(false);\n      }\n    });\n  }, [socket, history]);\n\n  const sendData = () => {\n    seterrorMsg(\"\");\n  };\n\n  const [form] = Form.useForm();\n  useEffect(() => {\n    setanimate(true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(RegisterStyle, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: {\n          span: 10,\n          offset: 2\n        },\n        xs: {\n          span: 16,\n          offset: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Comman, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: {\n          span: 6,\n          offset: 3\n        },\n        xs: {\n          span: 16,\n          offset: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          form: form,\n          onFinish: onfinish,\n          name: \"basic\",\n          validateMessages: {\n            types: {\n              email: \"Enter Valid Email !\"\n            }\n          },\n          initialValues: {\n            remember: true\n          },\n          className: animate ? \"registerFrom animated ant-form-vertical \" : \"registerFrom ant-form-vertical\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Welcome to Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Register to ChatApp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputDemo, {\n            name: \"name\",\n            label: \"Name\",\n            rules: [{\n              required: true,\n              message: \"Name is required\"\n            }],\n            Input: /*#__PURE__*/_jsxDEV(Input, {\n              autoComplete: \"off\",\n              placeholder: \"Input Your Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputDemo, {\n            name: \"username\",\n            label: \"User Name\",\n            rules: [{\n              required: true,\n              message: \"Username is required\"\n            }],\n            Input: /*#__PURE__*/_jsxDEV(Input, {\n              autoComplete: \"off\",\n              placeholder: \"Input Your User Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputDemo, {\n            name: \"email\",\n            label: \"Email\",\n            validation: !submitted ? true : false,\n            rules: [{\n              required: true,\n              message: \"Email is required\"\n            }],\n            Input: /*#__PURE__*/_jsxDEV(Input, {\n              autoComplete: \"off\",\n              onChange: () => {\n                setSubmitted(true);\n              },\n              placeholder: \"Input Your Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), !submitted ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"errorMsg\",\n            children: \"Enter valid email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this) : null, \" \", /*#__PURE__*/_jsxDEV(InputDemo, {\n            name: \"password\",\n            label: \"Password\",\n            rules: [{\n              required: true,\n              message: \"Password is required\"\n            }, () => ({\n              validator(_, value) {\n                if (value && value.length >= 8) {\n                  return Promise.resolve();\n                }\n\n                if (!value) {\n                  return Promise.resolve();\n                }\n\n                if (value.length < 8) {\n                  return Promise.reject(new Error(\"please enter at least 8 characters long password.\"));\n                } // if (value.length >= 20) {\n                //   return Promise.reject(\n                //     new Error(\"please enter less then 20 characters.\")\n                //   );\n                // }\n                // if (\n                //   value &&\n                //   value.length <= 8\n                //   // RegexList.password.test(value) &&\n                //   // /^\\S*$/.test(value)\n                // ) {\n                //   return Promise.resolve();\n                // }\n                // if (!value) {\n                //   return Promise.resolve();\n                // }\n                // return Promise.reject(\n                //   new Error(\n                //     \"please enter at least 8 characters long password.\"\n                //   )\n                // );\n\n              }\n\n            })],\n            Input: /*#__PURE__*/_jsxDEV(Input.Password, {\n              autoComplete: \"off\",\n              placeholder: \"Input Your Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            shouldUpdate: true,\n            children: () => /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              loading: load,\n              onClick: sendData,\n              children: \"Register Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/\",\n            style: {\n              textAlign: \"center\",\n              display: \"block\",\n              float: \"unset\"\n            },\n            children: \"Already have an Account !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), errorMsg !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"red\",\n              fontSize: \"12px\",\n              letterSpacing: \"1px\",\n              fontWeight: \"bolder\",\n              textAlign: \"center\"\n            },\n            children: errorMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterPage, \"E46jbHNqhGST9Kw/cGHFzrEn2SU=\", false, function () {\n  return [useHistory, Form.useForm];\n});\n\n_c = RegisterPage;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["C:/Users/jeel/mynodeproject/data/final_chat_applicaton/final_chat_application/client/src/pages/register/index.js"],"names":["Button","Col","Input","Row","Form","React","useEffect","useState","useHistory","NavLink","Comman","InputDemo","RegexList","setData","RegisterStyle","RegisterPage","socket","load","setLoad","errorMsg","seterrorMsg","animate","setanimate","submitData","setSubmitData","submitted","setSubmitted","history","onfinish","value","console","log","res","email","test","emit","on","status","prev","password","message","data","push","sendData","form","useForm","span","offset","types","remember","required","validator","_","length","Promise","resolve","reject","Error","textAlign","display","float","color","fontSize","letterSpacing","fontWeight"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport { Button, Col, Input, Row, Form } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Comman from \"../../component/Comman/Comman\";\r\nimport InputDemo from \"../../component/Input/InputDemo\";\r\nimport { RegexList } from \"../../component/RegexList\";\r\nimport { setData } from \"../../core/locaStorage/Local\";\r\nimport \"../home/home.scss\";\r\nimport { RegisterStyle } from \"./style\";\r\n\r\nconst RegisterPage = ({ socket }) => {\r\n  const [load, setLoad] = useState(false);\r\n  const [errorMsg, seterrorMsg] = useState(\"\");\r\n  const [animate, setanimate] = useState(false);\r\n  const [submitData, setSubmitData] = useState({});\r\n  const [submitted, setSubmitted] = useState(true);\r\n  const history = useHistory();\r\n\r\n  const onfinish = (value) => {\r\n    console.log(\"sdds\");\r\n    const res = RegexList.email.test(value.email);\r\n    if (res === true) {\r\n      setLoad(true);\r\n      setSubmitData(value);\r\n      setSubmitted(true);\r\n      setLoad(true);\r\n      socket.emit(\"register\", value);\r\n    } else {\r\n      setSubmitted(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"userRegistration\", (res) => {\r\n      console.log(res, \"response\");\r\n      if (res.status) {\r\n        // socket.emit(\"login\", { email: value.email, password: value.password });\r\n        setSubmitData((prev) => {\r\n          socket.emit(\"login\", { email: prev.email, password: prev.password });\r\n          return prev;\r\n        });\r\n        // seterrorMsg(\"\");\r\n        // history.push(\"/\");\r\n      } else if (res.status === false) {\r\n        seterrorMsg(res.message);\r\n        setLoad(false);\r\n      }\r\n    });\r\n  }, [socket, history]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"userLogin\", (res) => {\r\n      if (res.status) {\r\n        setLoad(false);\r\n        setData(\"user\", res.data);\r\n        setData(\"status\", true);\r\n        seterrorMsg(\"\");\r\n        history.push(\"/chat\");\r\n      } else if (res.status === false) {\r\n        seterrorMsg(res.message);\r\n        setLoad(false);\r\n      }\r\n    });\r\n  }, [socket, history]);\r\n\r\n  const sendData = () => {\r\n    seterrorMsg(\"\");\r\n  };\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    setanimate(true);\r\n  }, []);\r\n\r\n  return (\r\n    <RegisterStyle>\r\n      <Row>\r\n        <Col lg={{ span: 10, offset: 2 }} xs={{ span: 16, offset: 2 }}>\r\n          <Comman />\r\n        </Col>\r\n        <Col lg={{ span: 6, offset: 3 }} xs={{ span: 16, offset: 3 }}>\r\n          <Form\r\n            form={form}\r\n            onFinish={onfinish}\r\n            name=\"basic\"\r\n            validateMessages={{\r\n              types: {\r\n                email: \"Enter Valid Email !\",\r\n              },\r\n            }}\r\n            initialValues={{ remember: true }}\r\n            className={\r\n              animate\r\n                ? \"registerFrom animated ant-form-vertical \"\r\n                : \"registerFrom ant-form-vertical\"\r\n            }\r\n          >\r\n            <h2>Welcome to Chat</h2>\r\n            <h1>Register to ChatApp</h1>\r\n            <InputDemo\r\n              name=\"name\"\r\n              label=\"Name\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Name is required\",\r\n                },\r\n              ]}\r\n              Input={<Input autoComplete=\"off\" placeholder=\"Input Your Name\" />}\r\n            />\r\n            <InputDemo\r\n              name=\"username\"\r\n              label=\"User Name\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Username is required\",\r\n                },\r\n              ]}\r\n              Input={\r\n                <Input autoComplete=\"off\" placeholder=\"Input Your User Name\" />\r\n              }\r\n            />\r\n            <InputDemo\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              validation={!submitted ? true : false}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Email is required\",\r\n                },\r\n              ]}\r\n              Input={\r\n                <Input\r\n                  autoComplete=\"off\"\r\n                  onChange={() => {\r\n                    setSubmitted(true);\r\n                  }}\r\n                  placeholder=\"Input Your Email\"\r\n                />\r\n              }\r\n            />\r\n            {!submitted ? (\r\n              <span className=\"errorMsg\">Enter valid email</span>\r\n            ) : null}{\" \"}\r\n            <InputDemo\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Password is required\",\r\n                },\r\n                () => ({\r\n                  validator(_, value) {\r\n                    if (value && value.length >= 8) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    if (!value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    if (value.length < 8) {\r\n                      return Promise.reject(\r\n                        new Error(\r\n                          \"please enter at least 8 characters long password.\"\r\n                        )\r\n                      );\r\n                    }\r\n                    // if (value.length >= 20) {\r\n                    //   return Promise.reject(\r\n                    //     new Error(\"please enter less then 20 characters.\")\r\n                    //   );\r\n                    // }\r\n                    // if (\r\n                    //   value &&\r\n                    //   value.length <= 8\r\n                    //   // RegexList.password.test(value) &&\r\n                    //   // /^\\S*$/.test(value)\r\n                    // ) {\r\n                    //   return Promise.resolve();\r\n                    // }\r\n                    // if (!value) {\r\n                    //   return Promise.resolve();\r\n                    // }\r\n\r\n                    // return Promise.reject(\r\n                    //   new Error(\r\n                    //     \"please enter at least 8 characters long password.\"\r\n                    //   )\r\n                    // );\r\n                  },\r\n                }),\r\n              ]}\r\n              Input={\r\n                <Input.Password\r\n                  autoComplete=\"off\"\r\n                  placeholder=\"Input Your Password\"\r\n                />\r\n              }\r\n            />\r\n            <Form.Item shouldUpdate={true}>\r\n              {() => (\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  loading={load}\r\n                  onClick={sendData}\r\n                >\r\n                  Register Now\r\n                </Button>\r\n              )}\r\n            </Form.Item>\r\n            <NavLink\r\n              to=\"/\"\r\n              style={{ textAlign: \"center\", display: \"block\", float: \"unset\" }}\r\n            >\r\n              Already have an Account !\r\n            </NavLink>\r\n            {errorMsg !== \"\" ? (\r\n              <div\r\n                style={{\r\n                  color: \"red\",\r\n                  fontSize: \"12px\",\r\n                  letterSpacing: \"1px\",\r\n                  fontWeight: \"bolder\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                {errorMsg}\r\n              </div>\r\n            ) : null}\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </RegisterStyle>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"]},"metadata":{},"sourceType":"module"}