{"ast":null,"code":"import CryptoJS from \"crypto-js\"; // Encrypt\n\nexport const setData = (value, data) => {\n  var ciphertext = CryptoJS.AES.encrypt(JSON.stringify(data), \"secret key 123\").toString();\n  localStorage.setItem(value, ciphertext);\n  return ciphertext;\n}; // Decrypt\n\nexport const getData = data => {\n  let vara = localStorage.getItem(data);\n\n  if (vara) {\n    var bytes = CryptoJS.AES.decrypt(vara, \"secret key 123\");\n    var decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n    return decryptedData;\n  } else {\n    return null;\n  }\n};","map":{"version":3,"sources":["C:/Users/jeel/mynodeproject/data/final_chat_applicaton/final_chat_application/client/src/core/locaStorage/Local.js"],"names":["CryptoJS","setData","value","data","ciphertext","AES","encrypt","JSON","stringify","toString","localStorage","setItem","getData","vara","getItem","bytes","decrypt","decryptedData","parse","enc","Utf8"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,WAArB,C,CAEA;;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACtC,MAAIC,UAAU,GAAGJ,QAAQ,CAACK,GAAT,CAAaC,OAAb,CACfC,IAAI,CAACC,SAAL,CAAeL,IAAf,CADe,EAEf,gBAFe,EAGfM,QAHe,EAAjB;AAIAC,EAAAA,YAAY,CAACC,OAAb,CAAqBT,KAArB,EAA4BE,UAA5B;AACA,SAAOA,UAAP;AACD,CAPM,C,CASP;;AACA,OAAO,MAAMQ,OAAO,GAAIT,IAAD,IAAU;AAC/B,MAAIU,IAAI,GAAGH,YAAY,CAACI,OAAb,CAAqBX,IAArB,CAAX;;AACA,MAAIU,IAAJ,EAAU;AACR,QAAIE,KAAK,GAAGf,QAAQ,CAACK,GAAT,CAAaW,OAAb,CAAqBH,IAArB,EAA2B,gBAA3B,CAAZ;AACA,QAAII,aAAa,GAAGV,IAAI,CAACW,KAAL,CAAWH,KAAK,CAACN,QAAN,CAAeT,QAAQ,CAACmB,GAAT,CAAaC,IAA5B,CAAX,CAApB;AACA,WAAOH,aAAP;AACD,GAJD,MAIO;AACL,WAAO,IAAP;AACD;AACF,CATM","sourcesContent":["import CryptoJS from \"crypto-js\";\r\n\r\n// Encrypt\r\nexport const setData = (value, data) => {\r\n  var ciphertext = CryptoJS.AES.encrypt(\r\n    JSON.stringify(data),\r\n    \"secret key 123\"\r\n  ).toString();\r\n  localStorage.setItem(value, ciphertext);\r\n  return ciphertext;\r\n};\r\n\r\n// Decrypt\r\nexport const getData = (data) => {\r\n  let vara = localStorage.getItem(data);\r\n  if (vara) {\r\n    var bytes = CryptoJS.AES.decrypt(vara, \"secret key 123\");\r\n    var decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n    return decryptedData;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}