{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeel\\\\mynodeproject\\\\data\\\\final_chat_applicaton\\\\final_chat_application\\\\client\\\\src\\\\pages\\\\sidebarGroup\\\\GroupSidebar.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Form, Select, Avatar, Input, Popover } from \"antd\";\nimport Icons from \"../../component/Icons/Icons\";\nimport ModalField from \"../../component/Modal/ModalDemo\";\nimport { GroupStyle } from \"./GroupStyle\";\nimport InputDemo from \"../../component/Input/InputDemo\";\nimport axios from \"../../core/chatRedux/axios\";\nimport { useHistory } from \"react-router\";\nimport moment from \"moment\";\nimport { getData, setData } from \"../../core/locaStorage/Local\";\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\nimport { CgTrash } from \"react-icons/cg\";\nimport { GoPlus } from \"react-icons/go\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nconst GroupSidebar = ({\n  setSelectedGroup,\n  socket,\n  setGroupExist\n}) => {\n  _s();\n\n  const [openGroupModal, setopenGroupModal] = useState(false);\n  const [userListData, setuserListData] = useState([]);\n  const [groupList, setgroupList] = useState([]);\n  const [deleteModel, setdeleteModel] = useState(false);\n  const [deleteGroup, setdeleteGroup] = useState({});\n  const history = useHistory();\n  const [form] = Form.useForm();\n  useEffect(() => {\n    //create group\n    socket.on(\"createGroupResponse\", responce => {\n      console.log(\"responce\", responce);\n      setopenGroupModal(false);\n      form.resetFields();\n      setgroupList(prev => {\n        const list = [...prev];\n        list.unshift(responce);\n        setData(\"GroupList\", list);\n        return list;\n      });\n    }); //group list responce\n\n    socket.on(\"groupListResponse\", list => {\n      if (list) {\n        setgroupList(prev => {\n          prev = [...list];\n          return prev;\n        }); // if (list.length === 0) {\n        //   localStorage.removeItem(\"selectedGroup\");\n        // }\n\n        setGroupExist(true);\n      }\n    });\n    socket.on(\"newGroup\", list => {\n      if (list) {\n        console.log(\"........vvvv..........\");\n        setgroupList(prev => {\n          const dd = [...prev];\n          const s = dd.findIndex(e => e.groupId === list.groupId);\n\n          if (s === -1) {\n            dd.unshift({\n              groupId: list.groupId,\n              groupName: list.groupName\n            });\n            return dd;\n          }\n\n          return dd;\n        }); // setUserExist(true);\n      }\n\n      console.log(list, \"...newGroup...\");\n    });\n    socket.on(\"newGroupMessage\", data => {\n      setgroupList(prev => {\n        console.log(data, \"gyu\");\n        const list = [...prev];\n        const index = list.findIndex(e => e.groupId === data.group_id);\n\n        if (index !== -1) {\n          if (getData(\"selectedGroup\")) {\n            if (list[index].groupId !== getData(\"selectedGroup\").groupId) {\n              list[index].newM = true;\n              return list;\n            }\n          } else {\n            list[index].newM = true;\n            return list;\n          }\n        } else {\n          console.log(list, \"gyu\");\n          const newMess = {\n            groupId: data.group_id,\n            groupName: data.group_name,\n            newM: true\n          }; // l2[i2].newM = true;\n\n          list.unshift(newMess);\n          return list;\n        }\n\n        return list;\n      });\n      console.log(data, \"....data...\");\n    });\n  }, [socket]); //group list call\n\n  useEffect(() => {\n    socket.emit(\"groupList\", {\n      userId: getData(\"user\").id,\n      header: {\n        auth_token: getData(\"user\").token\n      }\n    });\n  }, []); //create group\n\n  const createGroup = () => {\n    setopenGroupModal(true);\n    axios.getAllUsers({\n      Authorization: `Bearer ${getData(\"user\").token}`\n    }).then(res => {\n      if (res.data.status === true) {\n        const data = [...res.data.data];\n        data.forEach(e => {\n          e.value = e.id;\n          return e;\n        });\n        setuserListData(data);\n      } else {\n        setuserListData([]);\n      }\n    }).catch(() => {\n      setuserListData([]);\n    });\n  }; //active current chat\n\n\n  const setActiveGroup = (item, key) => {\n    console.log(item, key);\n    setGroupExist(true);\n    setData(\"groupActive\", true);\n    setData(\"selectedGroup\", item);\n    history.push(\"/chat/group\");\n    setgroupList(prev => {\n      const list = [...prev];\n      const index = list.findIndex(e => e.groupId === item.groupId);\n\n      if (index !== -1) {\n        delete list[index].newM;\n        return list;\n      }\n\n      return list;\n    });\n    setSelectedGroup(item);\n  }; //create new group\n\n\n  const onFinish = values => {\n    let data = {\n      groupName: values.groupName,\n      adminId: getData(\"user\").id,\n      joinedAt: moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\"),\n      users: values.groupUsers\n    };\n    socket.emit(\"createGroup\", data);\n  };\n\n  const onDelete = item => {\n    console.log(\"item\", item);\n    setdeleteModel(true);\n    setdeleteGroup(item);\n  };\n\n  const deleteGroupData = () => {\n    console.log(\"delete group\", deleteGroup);\n    console.log(\"groupList\", groupList);\n    let deletedgroup = groupList.filter(item => item.groupId !== deleteGroup.groupId);\n    setgroupList(deletedgroup);\n    setdeleteModel(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(GroupStyle, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Group's\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header--buttons\",\n        children: /*#__PURE__*/_jsxDEV(GoPlus, {\n          onClick: createGroup,\n          style: {\n            height: \"25px\",\n            cursor: \"pointer\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatList\",\n      children: !groupList || groupList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nodata\",\n        children: \"NO GROUP FOUND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this) : groupList.map((item, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatListItem\",\n        onClick: () => setActiveGroup(item, key),\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          style: {\n            cursor: \"pointer\",\n            marginLeft: \"5px\"\n          },\n          size: {\n            xs: 30,\n            sm: 30,\n            md: 30,\n            lg: 30,\n            xl: 30\n          },\n          children: !item.groupName ? null : `${item.groupName.charAt(0)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatListItem--lines\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatListItem--line\",\n            style: {\n              justifyContent: \"space-between\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatListItem--name\",\n              children: [\" \", item.groupName, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this), item.newM ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatlistItem--date\",\n              children: /*#__PURE__*/_jsxDEV(Icons, {\n                type: \"newMessage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 21\n            }, this) : null, /*#__PURE__*/_jsxDEV(Popover, {\n              placement: \"rightTop\",\n              title: \"Title\",\n              content: /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => onDelete(item),\n                style: {\n                  cursor: \"pointer\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(CgTrash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 25\n                }, this), \"Delete\"]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 23\n              }, this),\n              trigger: \"click\",\n              children: /*#__PURE__*/_jsxDEV(BsThreeDotsVertical, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalField, {\n      visible: openGroupModal,\n      title: \"Create Group\",\n      className: \"uploadmodal\",\n      onCancel: () => {\n        setopenGroupModal(false);\n        form.resetFields();\n      },\n      footer: /*#__PURE__*/_jsxDEV(Button, {\n        form: \"GroupForm\",\n        htmlType: \"submit\",\n        children: \"Create\"\n      }, \"submit\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CreateGroupForm\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          form: form,\n          onFinish: onFinish,\n          id: \"GroupForm\",\n          className: \" ant-form-vertical\",\n          name: \"basic\",\n          initialValues: {\n            remember: true\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputDemo, {\n            name: \"groupName\",\n            label: \"Group Name\",\n            hasFeedback: false,\n            rules: [{\n              required: true,\n              message: \"GroupName is required\"\n            }],\n            Input: /*#__PURE__*/_jsxDEV(Input, {\n              autoComplete: \"off\",\n              placeholder: \"Input Group Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Group Users\",\n            name: \"groupUsers\",\n            rules: [{\n              required: true,\n              message: \"Select Users\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              mode: \"multiple\",\n              placeholder: \"Please Select\",\n              children: userListData && userListData.map(e => /*#__PURE__*/_jsxDEV(Option, {\n                value: e.id,\n                children: e.name\n              }, e.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalField, {\n      visible: deleteModel,\n      title: \"Delete this conversation?\",\n      className: \"uploadmodal\",\n      onCancel: () => {\n        setdeleteModel(false);\n      },\n      footer: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => setdeleteModel(false),\n        children: \"Cancel\"\n      }, \"cancelpost\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        danger: true,\n        onClick: deleteGroupData,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"permission\",\n        children: \"Deleting a conversation from your history is permanent. Other participants can still view this conversation.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GroupSidebar, \"DQDchShYSRRtVRtQ9LFNey4HYu0=\", false, function () {\n  return [useHistory, Form.useForm];\n});\n\n_c = GroupSidebar;\nexport default GroupSidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupSidebar\");","map":{"version":3,"sources":["C:/Users/jeel/mynodeproject/data/final_chat_applicaton/final_chat_application/client/src/pages/sidebarGroup/GroupSidebar.js"],"names":["React","useEffect","useState","Button","Form","Select","Avatar","Input","Popover","Icons","ModalField","GroupStyle","InputDemo","axios","useHistory","moment","getData","setData","BsThreeDotsVertical","CgTrash","GoPlus","Option","GroupSidebar","setSelectedGroup","socket","setGroupExist","openGroupModal","setopenGroupModal","userListData","setuserListData","groupList","setgroupList","deleteModel","setdeleteModel","deleteGroup","setdeleteGroup","history","form","useForm","on","responce","console","log","resetFields","prev","list","unshift","dd","s","findIndex","e","groupId","groupName","data","index","group_id","newM","newMess","group_name","emit","userId","id","header","auth_token","token","createGroup","getAllUsers","Authorization","then","res","status","forEach","value","catch","setActiveGroup","item","key","push","onFinish","values","adminId","joinedAt","Date","format","users","groupUsers","onDelete","deleteGroupData","deletedgroup","filter","height","cursor","length","map","marginLeft","xs","sm","md","lg","xl","charAt","justifyContent","remember","required","message","name"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Form, Select, Avatar, Input, Popover } from \"antd\";\r\nimport Icons from \"../../component/Icons/Icons\";\r\n\r\nimport ModalField from \"../../component/Modal/ModalDemo\";\r\nimport { GroupStyle } from \"./GroupStyle\";\r\nimport InputDemo from \"../../component/Input/InputDemo\";\r\nimport axios from \"../../core/chatRedux/axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport moment from \"moment\";\r\nimport { getData, setData } from \"../../core/locaStorage/Local\";\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport { CgTrash } from \"react-icons/cg\";\r\nimport { GoPlus } from \"react-icons/go\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst GroupSidebar = ({ setSelectedGroup, socket, setGroupExist }) => {\r\n  const [openGroupModal, setopenGroupModal] = useState(false);\r\n  const [userListData, setuserListData] = useState([]);\r\n  const [groupList, setgroupList] = useState([]);\r\n  const [deleteModel, setdeleteModel] = useState(false);\r\n  const [deleteGroup, setdeleteGroup] = useState({});\r\n\r\n  const history = useHistory();\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    //create group\r\n    socket.on(\"createGroupResponse\", (responce) => {\r\n      console.log(\"responce\", responce);\r\n      setopenGroupModal(false);\r\n      form.resetFields();\r\n      setgroupList((prev) => {\r\n        const list = [...prev];\r\n        list.unshift(responce);\r\n        setData(\"GroupList\", list);\r\n        return list;\r\n      });\r\n    });\r\n    //group list responce\r\n    socket.on(\"groupListResponse\", (list) => {\r\n      if (list) {\r\n        setgroupList((prev) => {\r\n          prev = [...list];\r\n          return prev;\r\n        });\r\n        // if (list.length === 0) {\r\n        //   localStorage.removeItem(\"selectedGroup\");\r\n        // }\r\n        setGroupExist(true);\r\n      }\r\n    });\r\n    socket.on(\"newGroup\", (list) => {\r\n      if (list) {\r\n        console.log(\"........vvvv..........\");\r\n        setgroupList((prev) => {\r\n          const dd = [...prev];\r\n          const s = dd.findIndex((e) => e.groupId === list.groupId);\r\n          if (s === -1) {\r\n            dd.unshift({ groupId: list.groupId, groupName: list.groupName });\r\n            return dd;\r\n          }\r\n          return dd;\r\n        });\r\n        // setUserExist(true);\r\n      }\r\n      console.log(list, \"...newGroup...\");\r\n    });\r\n    socket.on(\"newGroupMessage\", (data) => {\r\n      setgroupList((prev) => {\r\n        console.log(data, \"gyu\");\r\n\r\n        const list = [...prev];\r\n        const index = list.findIndex((e) => e.groupId === data.group_id);\r\n\r\n        if (index !== -1) {\r\n          if (getData(\"selectedGroup\")) {\r\n            if (list[index].groupId !== getData(\"selectedGroup\").groupId) {\r\n              list[index].newM = true;\r\n              return list;\r\n            }\r\n          } else {\r\n            list[index].newM = true;\r\n            return list;\r\n          }\r\n        } else {\r\n          console.log(list, \"gyu\");\r\n          const newMess = {\r\n            groupId: data.group_id,\r\n            groupName: data.group_name,\r\n            newM: true,\r\n          };\r\n          // l2[i2].newM = true;\r\n          list.unshift(newMess);\r\n          return list;\r\n        }\r\n        return list;\r\n      });\r\n      console.log(data, \"....data...\");\r\n    });\r\n  }, [socket]);\r\n\r\n  //group list call\r\n  useEffect(() => {\r\n    socket.emit(\"groupList\", {\r\n      userId: getData(\"user\").id,\r\n      header: { auth_token: getData(\"user\").token },\r\n    });\r\n  }, []);\r\n\r\n  //create group\r\n  const createGroup = () => {\r\n    setopenGroupModal(true);\r\n    axios\r\n      .getAllUsers({\r\n        Authorization: `Bearer ${getData(\"user\").token}`,\r\n      })\r\n      .then((res) => {\r\n        if (res.data.status === true) {\r\n          const data = [...res.data.data];\r\n          data.forEach((e) => {\r\n            e.value = e.id;\r\n            return e;\r\n          });\r\n          setuserListData(data);\r\n        } else {\r\n          setuserListData([]);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setuserListData([]);\r\n      });\r\n  };\r\n\r\n  //active current chat\r\n  const setActiveGroup = (item, key) => {\r\n    console.log(item, key);\r\n    setGroupExist(true);\r\n    setData(\"groupActive\", true);\r\n    setData(\"selectedGroup\", item);\r\n    history.push(\"/chat/group\");\r\n    setgroupList((prev) => {\r\n      const list = [...prev];\r\n      const index = list.findIndex((e) => e.groupId === item.groupId);\r\n      if (index !== -1) {\r\n        delete list[index].newM;\r\n        return list;\r\n      }\r\n      return list;\r\n    });\r\n    setSelectedGroup(item);\r\n  };\r\n\r\n  //create new group\r\n  const onFinish = (values) => {\r\n    let data = {\r\n      groupName: values.groupName,\r\n      adminId: getData(\"user\").id,\r\n      joinedAt: moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\"),\r\n      users: values.groupUsers,\r\n    };\r\n    socket.emit(\"createGroup\", data);\r\n  };\r\n\r\n  const onDelete = (item) => {\r\n    console.log(\"item\", item);\r\n    setdeleteModel(true);\r\n    setdeleteGroup(item);\r\n  };\r\n\r\n  const deleteGroupData = () => {\r\n    console.log(\"delete group\", deleteGroup);\r\n    console.log(\"groupList\", groupList);\r\n    let deletedgroup = groupList.filter(\r\n      (item) => item.groupId !== deleteGroup.groupId\r\n    );\r\n    setgroupList(deletedgroup);\r\n    setdeleteModel(false);\r\n  };\r\n  return (\r\n    <GroupStyle>\r\n      <div className=\"search\">\r\n        <span>Group's</span>\r\n        <div className=\"header--buttons\">\r\n          <GoPlus\r\n            onClick={createGroup}\r\n            style={{ height: \"25px\", cursor: \"pointer\" }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"chatList\">\r\n        {!groupList || groupList.length === 0 ? (\r\n          <div className=\"nodata\">NO GROUP FOUND</div>\r\n        ) : (\r\n          groupList.map((item, key) => (\r\n            <div\r\n              className=\"chatListItem\"\r\n              key={key}\r\n              onClick={() => setActiveGroup(item, key)}\r\n            >\r\n              <Avatar\r\n                style={{ cursor: \"pointer\", marginLeft: \"5px\" }}\r\n                size={{\r\n                  xs: 30,\r\n                  sm: 30,\r\n                  md: 30,\r\n                  lg: 30,\r\n                  xl: 30,\r\n                }}\r\n              >\r\n                {!item.groupName ? null : `${item.groupName.charAt(0)}`}\r\n              </Avatar>\r\n              <div className=\"chatListItem--lines\">\r\n                <div\r\n                  className=\"chatListItem--line\"\r\n                  style={{ justifyContent: \"space-between\" }}\r\n                >\r\n                  <div className=\"chatListItem--name\"> {item.groupName} </div>\r\n                  {item.newM ? (\r\n                    <div className=\"chatlistItem--date\">\r\n                      <Icons type=\"newMessage\" />\r\n                    </div>\r\n                  ) : null}\r\n                  <Popover\r\n                    placement=\"rightTop\"\r\n                    title=\"Title\"\r\n                    content={\r\n                      <div\r\n                        key={item.id}\r\n                        onClick={() => onDelete(item)}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      >\r\n                        <CgTrash />\r\n                        Delete\r\n                      </div>\r\n                    }\r\n                    trigger=\"click\"\r\n                  >\r\n                    <BsThreeDotsVertical />\r\n                  </Popover>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n      {/* create group modal  */}\r\n      <ModalField\r\n        visible={openGroupModal}\r\n        title=\"Create Group\"\r\n        className=\"uploadmodal\"\r\n        onCancel={() => {\r\n          setopenGroupModal(false);\r\n          form.resetFields();\r\n        }}\r\n        footer={\r\n          <Button form=\"GroupForm\" key=\"submit\" htmlType=\"submit\">\r\n            Create\r\n          </Button>\r\n        }\r\n      >\r\n        <div className=\"CreateGroupForm\">\r\n          <Form\r\n            form={form}\r\n            onFinish={onFinish}\r\n            id=\"GroupForm\"\r\n            className=\" ant-form-vertical\"\r\n            name=\"basic\"\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n          >\r\n            <InputDemo\r\n              name=\"groupName\"\r\n              label=\"Group Name\"\r\n              hasFeedback={false}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"GroupName is required\",\r\n                },\r\n              ]}\r\n              Input={\r\n                <Input autoComplete=\"off\" placeholder=\"Input Group Name\" />\r\n              }\r\n            />\r\n            <Form.Item\r\n              label=\"Group Users\"\r\n              name=\"groupUsers\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Select Users\",\r\n                },\r\n              ]}\r\n            >\r\n              <Select mode=\"multiple\" placeholder=\"Please Select\">\r\n                {userListData &&\r\n                  userListData.map((e) => (\r\n                    <Option key={e.id} value={e.id}>\r\n                      {e.name}\r\n                    </Option>\r\n                  ))}\r\n              </Select>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </ModalField>\r\n\r\n      {/* delet group modal  */}\r\n      <ModalField\r\n        visible={deleteModel}\r\n        title=\"Delete this conversation?\"\r\n        className=\"uploadmodal\"\r\n        onCancel={() => {\r\n          setdeleteModel(false);\r\n        }}\r\n        footer={[\r\n          <Button\r\n            key=\"cancelpost\"\r\n            type=\"primary\"\r\n            onClick={() => setdeleteModel(false)}\r\n          >\r\n            Cancel\r\n          </Button>,\r\n          <Button danger onClick={deleteGroupData}>\r\n            Delete\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <span className=\"permission\">\r\n          Deleting a conversation from your history is permanent. Other\r\n          participants can still view this conversation.\r\n        </span>\r\n      </ModalField>\r\n    </GroupStyle>\r\n  );\r\n};\r\n\r\nexport default GroupSidebar;\r\n"]},"metadata":{},"sourceType":"module"}