{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeel\\\\mynodeproject\\\\data\\\\chatAppFront\\\\src\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router\";\nimport axios from \"../core/chatRedux/axios\";\nimport { getData, setData } from \"../core/locaStorage/Local\";\nimport Chat from \"./chat/chat\";\nimport GroupChat from \"./GroupChat/GroupChat\";\nimport Sidebar from \"./sidebar/Sidebar\";\nimport { PageStyle } from \"./style\";\nimport { Row, Col, Divider } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PageRoute = props => {\n  _s();\n\n  const {\n    rederpage,\n    socket\n  } = props;\n  const [selectedUser, setSelectedUser] = useState({});\n  const [selectedGroup, setSelectedGroup] = useState({});\n  const [userExist, setUserExist] = useState(false);\n  useEffect(() => {\n    axios.getAllUsers({\n      Authorization: `Bearer ${getData(\"user\").token}`\n    }).then(res => {\n      if (res.data.status === true) {\n        const userData = getData(\"user\");\n        const list = [...res.data.data];\n        const index = list.findIndex(e => e.id === userData.id);\n\n        if (index !== -1) {\n          list.splice(index, 1);\n        }\n\n        setData(\"localUserList\", list);\n      } else {\n        setData(\"localUserList\", []);\n      }\n    }).catch(() => {});\n  }, []);\n  useEffect(() => {\n    socket.on(\"groupListResponse\", list => {\n      if (list && list.length !== 0) {\n        setUserExist(false);\n      } else {\n        setUserExist(false);\n      }\n    });\n  }, [socket]);\n  const ActiveGroup = getData(\"groupActive\");\n  return /*#__PURE__*/_jsxDEV(PageStyle, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      gutter: {\n        xs: 8,\n        sm: 16,\n        md: 24,\n        lg: 32\n      },\n      style: {\n        margin: \"0px\",\n        padding: \"0px\"\n      },\n      className: \"app_window\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"gutter-row\",\n        span: 4,\n        style: {\n          margin: \"0px\",\n          padding: \"0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {\n          setSelectedUser: setSelectedUser,\n          socket: socket,\n          setSelectedGroup: setSelectedGroup,\n          setUserExist: setUserExist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"gutter-row\",\n        span: 20,\n        style: {\n          margin: \"0px\",\n          padding: \"0px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          render: () => ActiveGroup ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/chat/group\",\n            exact: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: ActiveGroup === true ? /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/chat/group\",\n            children: /*#__PURE__*/_jsxDEV(GroupChat, {\n              socket: socket,\n              userExist: userExist,\n              selectedGroup: selectedGroup\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/chat\",\n            children: /*#__PURE__*/_jsxDEV(Chat, {\n              username: props.match.params.username,\n              socket: socket,\n              selectedUser: selectedUser,\n              rederpage: rederpage,\n              userExist: userExist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PageRoute, \"viVEZqnsiwu/dLACoGawcbnzKUw=\");\n\n_c = PageRoute;\nexport default PageRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageRoute\");","map":{"version":3,"sources":["C:/Users/jeel/mynodeproject/data/chatAppFront/src/pages/index.js"],"names":["React","useEffect","useState","Redirect","Route","Switch","axios","getData","setData","Chat","GroupChat","Sidebar","PageStyle","Row","Col","Divider","PageRoute","props","rederpage","socket","selectedUser","setSelectedUser","selectedGroup","setSelectedGroup","userExist","setUserExist","getAllUsers","Authorization","token","then","res","data","status","userData","list","index","findIndex","e","id","splice","catch","on","length","ActiveGroup","xs","sm","md","lg","margin","padding","match","params","username"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router\";\r\nimport axios from \"../core/chatRedux/axios\";\r\nimport { getData, setData } from \"../core/locaStorage/Local\";\r\nimport Chat from \"./chat/chat\";\r\nimport GroupChat from \"./GroupChat/GroupChat\";\r\nimport Sidebar from \"./sidebar/Sidebar\";\r\nimport { PageStyle } from \"./style\";\r\nimport { Row, Col, Divider } from \"antd\";\r\n\r\nconst PageRoute = (props) => {\r\n  const { rederpage, socket } = props;\r\n  const [selectedUser, setSelectedUser] = useState({});\r\n  const [selectedGroup, setSelectedGroup] = useState({});\r\n  const [userExist, setUserExist] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .getAllUsers({\r\n        Authorization: `Bearer ${getData(\"user\").token}`,\r\n      })\r\n      .then((res) => {\r\n        if (res.data.status === true) {\r\n          const userData = getData(\"user\");\r\n          const list = [...res.data.data];\r\n          const index = list.findIndex((e) => e.id === userData.id);\r\n          if (index !== -1) {\r\n            list.splice(index, 1);\r\n          }\r\n          setData(\"localUserList\", list);\r\n        } else {\r\n          setData(\"localUserList\", []);\r\n        }\r\n      })\r\n      .catch(() => {});\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"groupListResponse\", (list) => {\r\n      if (list && list.length !== 0) {\r\n        setUserExist(false);\r\n      } else {\r\n        setUserExist(false);\r\n      }\r\n    });\r\n  }, [socket]);\r\n\r\n  const ActiveGroup = getData(\"groupActive\");\r\n\r\n  return (\r\n    <PageStyle>\r\n      <Row\r\n        gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}\r\n        style={{ margin: \"0px\", padding: \"0px\" }}\r\n        className=\"app_window\"\r\n      >\r\n        <Col\r\n          className=\"gutter-row\"\r\n          span={4}\r\n          style={{ margin: \"0px\", padding: \"0px\" }}\r\n        >\r\n          <Sidebar\r\n            setSelectedUser={setSelectedUser}\r\n            socket={socket}\r\n            setSelectedGroup={setSelectedGroup}\r\n            setUserExist={setUserExist}\r\n          />\r\n        </Col>\r\n        <Col\r\n          className=\"gutter-row\"\r\n          span={20}\r\n          style={{ margin: \"0px\", padding: \"0px\" }}\r\n        >\r\n          <Route\r\n            render={() =>\r\n              ActiveGroup ? (\r\n                <Redirect to=\"/chat/group\" exact />\r\n              ) : (\r\n                <Redirect to=\"/chat\" />\r\n              )\r\n            }\r\n          ></Route>\r\n          <Switch>\r\n            {ActiveGroup === true ? (\r\n              <Route path=\"/chat/group\">\r\n                <GroupChat\r\n                  socket={socket}\r\n                  userExist={userExist}\r\n                  selectedGroup={selectedGroup}\r\n                />\r\n              </Route>\r\n            ) : (\r\n              <Route path=\"/chat\">\r\n                <Chat\r\n                  username={props.match.params.username}\r\n                  socket={socket}\r\n                  selectedUser={selectedUser}\r\n                  rederpage={rederpage}\r\n                  userExist={userExist}\r\n                />\r\n              </Route>\r\n            )}\r\n          </Switch>\r\n        </Col>\r\n      </Row>\r\n    </PageStyle>\r\n  );\r\n};\r\n\r\nexport default PageRoute;\r\n"]},"metadata":{},"sourceType":"module"}