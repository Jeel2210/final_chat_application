{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeel\\\\mynodeproject\\\\data\\\\chatAppFront\\\\src\\\\pages\\\\chat\\\\chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport Avatars from \"react-avatar\";\nimport { Button, message, Upload, Avatar } from \"antd\";\nimport axios from \"axios\";\nimport ImageViewer from \"react-simple-image-viewer\";\nimport { RiSendPlaneLine } from \"react-icons/ri\";\nimport ModalField from \"../../component/Modal/ModalDemo\";\nimport Icons from \"../../component/Icons/Icons\";\nimport APi from \"../../core/chatRedux/axios\";\nimport \"../chat/chat.scss\";\nimport { ChatStyle } from \"./ChayStyle.js\";\nimport moment from \"moment\";\nimport { getData } from \"../../core/locaStorage/Local\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\nimport { BsEmojiSmile } from \"react-icons/bs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Chat = ({\n  socket,\n  selectedUser,\n  userExist\n}) => {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [recieverD, setRecieverD] = useState({});\n  const [messages, setMessages] = useState([]);\n  const [openModal, setOpenModal] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n  const [cancelUploadDisable, setcancelUploadDisable] = useState(false);\n  const [currentImage, setCurrentImage] = useState(0);\n  const [images, setImages] = useState([]);\n  const [fileStatus, setFileStatus] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [fileLoading, setFileLoading] = useState(false);\n  const [alerted, setAlerted] = useState(false);\n  const [openEmojiModel, setopenEmojiModel] = useState(false);\n  let rData;\n  const ref = useRef(\"\"); // socket Response\n\n  messages.sort(function (a, b) {\n    return a.date.localeCompare(b.date);\n  }); // console.log(\"socket\", socket);\n  //connecting responce\n  // useEffect(() => {\n  //   socket.on(\"connect\", () => {\n  //     console.log(\"Connected\");\n  //   });\n  //   socket.on(\"disconnect\", () => {\n  //     console.log(\"Disconnected\");\n  //   });\n  //   socket.io.on(\"reconnect\", (attempt) => {\n  //     console.log(\"reconnect\", attempt);\n  //   });\n  //   socket.io.on(\"reconnect_attempt\", (attempt) => {\n  //     console.log(\"reconnect_attempt\", attempt);\n  //   });\n  //   socket.io.on(\"reconnect_error\", (error) => {\n  //     console.log(\"reconnect_error\", error);\n  //   });\n  // }, [socket]);\n  // chat Response\n\n  useEffect(() => {\n    socket.on(\"message\", message => {\n      if (getData(\"selectedUser\")) {\n        if (message.receiver.id === getData(\"selectedUser\").id || message.sender.id === getData(\"selectedUser\").id) {\n          let temp = {\n            type: message.type ? message.type : null,\n            sender: message.sender,\n            receiver: message.receiver,\n            text: message.message,\n            date: moment(message.sent_at).format(\"YYYY-MM-DD HH:mm:ss\"),\n            filename: message.filename\n          };\n          setMessages(prev => {\n            prev.push(temp);\n            return prev;\n          });\n        }\n\n        setFileLoading(false);\n        setOpenModal(false);\n        setFiles([]);\n      }\n    });\n  }, [socket]); // messageHistroy Response\n\n  useEffect(() => {\n    socket.on(\"messsageHistory\", message => {\n      let temp = {\n        type: message.type ? message.type : null,\n        sender: message.sender,\n        receiver: message.receiver,\n        text: message.message,\n        date: moment(message.sent_at).format(\"YYYY-MM-DD HH:mm:ss\"),\n        filename: message.filename\n      };\n      setMessages(prev => {\n        prev.push(temp);\n        return prev;\n      });\n      setFileLoading(false);\n      setOpenModal(false);\n      setFiles([]);\n    });\n  }, [socket]); // set CurrentUSerTO local\n\n  useEffect(() => {\n    // setMessages([]);\n    if (recieverD && Object.keys(recieverD).length === 0) {\n      setSubmitted(true);\n    } else {\n      setSubmitted(false);\n    }\n\n    const user = getData(\"user\");\n    setCurrentUser(user);\n  }, [recieverD]); // reciever detail\n\n  useEffect(() => {\n    setMessages([]);\n    rData = getData(\"selectedUser\");\n\n    if (rData && Object.keys(rData).length !== 0) {\n      setRecieverD(rData);\n    } else {\n      setRecieverD({});\n    }\n\n    if (rData && Object.keys(rData).length !== 0) {\n      const user = getData(\"user\");\n      socket.emit(\"messageHistory\", {\n        sender: user.id,\n        receiver: rData.id,\n        header: {\n          auth_token: getData(\"user\").token\n        }\n      });\n    }\n  }, [selectedUser]);\n\n  const sendData = () => {\n    let removeEmptySpace = text.replace(/^\\s+/, \"\").replace(/\\s+$/, \"\");\n\n    if (removeEmptySpace === \"\") {} else {\n      if (text !== \"\" && currentUser && recieverD) {\n        //final data\n        let data = {\n          sender: currentUser.id,\n          receiver: recieverD.id,\n          type: \"chat\",\n          message: text\n        };\n        data.header = {};\n        data.header.auth_token = getData(\"user\").token;\n        socket.emit(\"chat\", data);\n        setText(\"\");\n      }\n    }\n  }; // upload\n\n\n  const addFile = e => {\n    // setAlerted(false);\n    const onlyFiles = [...files];\n    const dd = files.findIndex(eee => eee.name === e.file.originFileObj.name);\n    console.log(e.file.type);\n\n    if (e.file.type !== \"\") {\n      if (dd === -1) {\n        const fsize = e.file.size;\n        const file = Math.round(fsize / 1024);\n        console.log(\"vv.v..vv.\");\n\n        if (file >= 4096) {\n          if (alerted === false) {\n            // message.error(\"please select a file less than 4mb\");\n            setAlerted(true);\n          }\n        } else {\n          onlyFiles.push(e.file.originFileObj);\n        }\n      }\n\n      setFiles([...onlyFiles]);\n    } else {\n      if (alerted === false) {\n        // message.error(\"Unknown File Type !\");\n        setAlerted(true);\n      }\n    }\n\n    setTimeout(() => {\n      setAlerted(false);\n    }, 1000);\n  };\n\n  const removeFile = index => {\n    const dataList = files;\n    dataList.splice(index, 1);\n    setFiles([...dataList]);\n    const fileStatusSet = fileStatus;\n    fileStatusSet.splice(index, 1);\n    setFileStatus([...fileStatusSet]);\n  }; // submit file\n\n\n  const addWarroomFile = imageFile => {\n    setcancelUploadDisable(true);\n    setFileLoading(true);\n    const f = [];\n    imageFile.forEach((dd, index) => {\n      f[index] = {\n        index: index,\n        image: dd\n      };\n    });\n\n    if (currentUser && recieverD) {\n      const form = new FormData();\n      imageFile.forEach(element => {\n        form.append(\"files\", element);\n      });\n      form.append(\"sender\", currentUser.id);\n      form.append(\"receiver\", recieverD.id);\n      form.append(\"type\", \"image\");\n      APi.postData(form).then(res => {\n        const s = {};\n        s.header = {};\n        s.header.auth_token = getData(\"user\").token;\n        s.files = [...res.data.data];\n        socket.emit(\"imageResponse\", s);\n        setOpenModal(false);\n        setFileLoading(false);\n        setFiles([]);\n        setcancelUploadDisable(false);\n      }).catch(err => {\n        console.error(err);\n        setcancelUploadDisable(false);\n      });\n    }\n  }; // download logic\n\n\n  const handleDonl = (file, filename) => {\n    const url = window.URL.createObjectURL(new Blob([file]));\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.setAttribute(\"download\", filename);\n    document.body.appendChild(link);\n    link.click();\n  }; // handle image download\n\n\n  const handleDownload = (url, filename) => {\n    axios.get(url, {\n      responseType: \"blob\"\n    }).then(res => {\n      handleDonl(res.data, filename);\n    });\n  }; // image preview\n\n\n  const openImageViewer = useCallback((index, i) => {\n    setCurrentImage(index);\n    setImages([i]);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setImages([]);\n    setIsViewerOpen(false);\n  }; //send emoji\n\n\n  const openEmoji = () => {\n    setopenEmojiModel(!openEmojiModel);\n  };\n\n  const selectedEmoji = e => {\n    console.log(\"emoji\", e.native);\n    setText(message + e.native);\n    setopenEmojiModel(false);\n  }; //upload image preview\n\n\n  const imageupload = () => {\n    const value = ref.current.click();\n  };\n\n  const onImageChange = event => {\n    event.preventDefault();\n    let files = event.target.files;\n    let temp = [];\n\n    for (let a in files) {\n      temp.push(files[a]);\n    }\n\n    let aban = temp.splice(0, temp.length - 2);\n    setImages(aban);\n    addWarroomFile(aban);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChatStyle, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: event => onImageChange(event),\n      ref: ref,\n      style: {\n        display: \"none\"\n      },\n      multiple: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [userExist === false || Object.keys(recieverD).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nodata-page\",\n        children: [/*#__PURE__*/_jsxDEV(Icons, {\n          type: \"moontech\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: \"bolder\",\n            fontSize: \"20px\",\n            color: \"#70bde9\"\n          },\n          children: \"No conversation selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-name\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              style: {\n                cursor: \"pointer\"\n              },\n              size: {\n                xs: 30,\n                sm: 30,\n                md: 30,\n                lg: 30,\n                xl: 30\n              },\n              children: [recieverD && Object.keys(recieverD).length !== 0 ? recieverD.name.charAt(0) : \" * \", currentUser.name ? `${currentUser.name.charAt(0)}` : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 17\n            }, this), recieverD && Object.keys(recieverD).length !== 0 ? recieverD.name : \"_ _ _\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: ref => {\n            if (ref !== null) {\n              ref.addEventListener(\"DOMNodeInserted\", event => {\n                const {\n                  currentTarget: target\n                } = event;\n                target.scroll({\n                  top: target.scrollHeight,\n                  behavior: \"smooth\"\n                });\n              });\n            }\n          },\n          className: \"chat-message\",\n          children: messages.map((i, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: i.sender.id === currentUser.id ? \"message mess-right\" : \"message\",\n            children: i.type === \"image\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: i.sender.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: i.sender.id !== currentUser.id ? \"img hoverable\" : \"img\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `${i.text}`,\n                  onClick: () => openImageViewer(0, i.text),\n                  alt: \"img\",\n                  style: {\n                    cursor: \"pointer\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 23\n              }, this), i.sender.id !== currentUser.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Icons, {\n                  type: \"Download\",\n                  onClick: () => handleDownload(i.text, i.filename)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: i.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginTop: \"3px\",\n                  padding: \"unset\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: i.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Icons, {\n                  type: \"Download\",\n                  onClick: () => handleDownload(i.text, i.filename)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true) : i.type === \"file\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: i.sender.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  width: \"100%\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    display: \"flex\",\n                    wordBreak: \"break-all\"\n                  },\n                  className: i.sender.id === currentUser.id ? \"fileType-right\" : \"fileType\",\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    fill: \"#000000\",\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    viewBox: \"0 0 80 80\",\n                    width: \"18px\",\n                    height: \"18px\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M 15 9 L 15 71 L 65 71 L 65 23.585938 L 50.414063 9 Z M 17 11 L 49 11 L 49 25 L 63 25 L 63 69 L 17 69 Z M 51 12.414063 L 61.585938 23 L 51 23 Z M 22 13 C 21.449219 13 21 13.449219 21 14 C 21 14.550781 21.449219 15 22 15 C 22.550781 15 23 14.550781 23 14 C 23 13.449219 22.550781 13 22 13 Z M 22 17 C 21.449219 17 21 17.449219 21 18 C 21 18.550781 21.449219 19 22 19 C 22.550781 19 23 18.550781 23 18 C 23 17.449219 22.550781 17 22 17 Z M 22 21 C 21.449219 21 21 21.449219 21 22 C 21 22.550781 21.449219 23 22 23 C 22.550781 23 23 22.550781 23 22 C 23 21.449219 22.550781 21 22 21 Z M 22 25 C 21.449219 25 21 25.449219 21 26 C 21 26.550781 21.449219 27 22 27 C 22.550781 27 23 26.550781 23 26 C 23 25.449219 22.550781 25 22 25 Z M 22 29 C 21.449219 29 21 29.449219 21 30 C 21 30.550781 21.449219 31 22 31 C 22.550781 31 23 30.550781 23 30 C 23 29.449219 22.550781 29 22 29 Z M 22 33 C 21.449219 33 21 33.449219 21 34 C 21 34.550781 21.449219 35 22 35 C 22.550781 35 23 34.550781 23 34 C 23 33.449219 22.550781 33 22 33 Z M 22 37 C 21.449219 37 21 37.449219 21 38 C 21 38.550781 21.449219 39 22 39 C 22.550781 39 23 38.550781 23 38 C 23 37.449219 22.550781 37 22 37 Z M 22 41 C 21.449219 41 21 41.449219 21 42 C 21 42.550781 21.449219 43 22 43 C 22.550781 43 23 42.550781 23 42 C 23 41.449219 22.550781 41 22 41 Z M 22 45 C 21.449219 45 21 45.449219 21 46 C 21 46.550781 21.449219 47 22 47 C 22.550781 47 23 46.550781 23 46 C 23 45.449219 22.550781 45 22 45 Z M 22 49 C 21.449219 49 21 49.449219 21 50 C 21 50.550781 21.449219 51 22 51 C 22.550781 51 23 50.550781 23 50 C 23 49.449219 22.550781 49 22 49 Z M 22 53 C 21.449219 53 21 53.449219 21 54 C 21 54.550781 21.449219 55 22 55 C 22.550781 55 23 54.550781 23 54 C 23 53.449219 22.550781 53 22 53 Z M 22 57 C 21.449219 57 21 57.449219 21 58 C 21 58.550781 21.449219 59 22 59 C 22.550781 59 23 58.550781 23 58 C 23 57.449219 22.550781 57 22 57 Z M 22 61 C 21.449219 61 21 61.449219 21 62 C 21 62.550781 21.449219 63 22 63 C 22.550781 63 23 62.550781 23 62 C 23 61.449219 22.550781 61 22 61 Z M 22 65 C 21.449219 65 21 65.449219 21 66 C 21 66.550781 21.449219 67 22 67 C 22.550781 67 23 66.550781 23 66 C 23 65.449219 22.550781 65 22 65 Z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 442,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 27\n                  }, this), i.filename]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 23\n              }, this), i.sender.id !== currentUser.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Icons, {\n                  type: \"Download\",\n                  onClick: () => handleDownload(i.text, i.filename)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: i.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginTop: \"3px\",\n                  padding: \"unset\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: i.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Icons, {\n                  type: \"Download\",\n                  onClick: () => handleDownload(i.text, i.filename)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: i.sender.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 23\n              }, this), i.sender.id !== currentUser.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Avatars, {\n                  size: \"30\",\n                  name: i.sender.name,\n                  round: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: i.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  justifyContent: \"end\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: i.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Avatars, {\n                  googleId: \"118096717852922241760\",\n                  size: \"30\",\n                  name: i.sender.name,\n                  round: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: i.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Enter Your Message\",\n            value: text,\n            style: {\n              cursor: submitted ? \"not-allowed\" : \"text\",\n              opacity: submitted ? 0.5 : 1\n            },\n            disabled: submitted,\n            onChange: e => setText(e.target.value),\n            ref: input => input = input,\n            onKeyPress: e => {\n              if (e.key === \"Enter\") {\n                sendData();\n              }\n\n              if (e.key === \"Enter\" && e.shiftKey) {\n                console.log(\"shift + enter\");\n                e.preventDefault();\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(BsEmojiSmile, {\n            onClick: openEmoji,\n            style: {\n              cursor: \"pointer\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-box1\",\n            onClick: () => imageupload(),\n            children: /*#__PURE__*/_jsxDEV(Icons, {\n              className: \"svgIcon\",\n              type: \"attachemt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-box\",\n            onClick: !submitted ? () => sendData() : () => message.error({\n              content: \"Select User to Send Message\"\n            }),\n            children: /*#__PURE__*/_jsxDEV(RiSendPlaneLine, {\n              className: \"btn-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(ModalField, {\n        visible: openModal,\n        title: \"Attachment\",\n        className: \"uploadmodal\",\n        onCancel: () => {\n          setOpenModal(false);\n          setFiles([]);\n          setFileLoading(false);\n        },\n        footer: false,\n        children: [/*#__PURE__*/_jsxDEV(Upload, {\n          name: \"avatar\",\n          accept: \"crt\",\n          multiple: true,\n          showUploadList: false,\n          onChange: e => {\n            addFile(e);\n          },\n          className: \"uploadBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"ant-upload-drag-icon\",\n            children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"ant-upload-text\",\n            children: \"Click to this area to upload file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            maxHeight: \"100px\",\n            overflow: \"auto\",\n            marginTop: \"15px\"\n          },\n          className: \"overflowDiv\",\n          children: files.length !== 0 && files.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"controlLabel\",\n            style: {\n              marginTop: \"15px\"\n            },\n            children: [file.name, `(${file.size / 1000} KB)`, cancelUploadDisable ? \"\" : /*#__PURE__*/_jsxDEV(Icons, {\n              type: \"close\",\n              icontype: \"globle\",\n              id: `iFiles_close${index}`,\n              className: \"removeFiles\",\n              margin: \"10px\",\n              onClick: () => removeFile(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footerContent\",\n          children: files.length > 0 ? /*#__PURE__*/_jsxDEV(Button, {\n            id: \"warroom_upload\",\n            disabled: fileStatus.includes(false) || false,\n            loading: fileLoading,\n            onClick: addWarroomFile,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 15\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 9\n      }, this), isViewerOpen && /*#__PURE__*/_jsxDEV(ImageViewer, {\n        src: images,\n        currentIndex: currentImage,\n        onClose: closeImageViewer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 11\n      }, this), openEmojiModel && /*#__PURE__*/_jsxDEV(Picker, {\n        set: \"google\",\n        showPreview: false,\n        style: {\n          position: \"absolute\",\n          bottom: \"160px\",\n          right: \"150px\",\n          borderRadius: \"10px 10px 0px 10px\"\n        },\n        onSelect: e => selectedEmoji(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 316,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"rzAwbejl8CfDkVBFLfYHN5uHKGs=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/jeel/mynodeproject/data/chatAppFront/src/pages/chat/chat.js"],"names":["React","useState","useEffect","useCallback","useRef","InboxOutlined","Avatars","Button","message","Upload","Avatar","axios","ImageViewer","RiSendPlaneLine","ModalField","Icons","APi","ChatStyle","moment","getData","Picker","BsEmojiSmile","Chat","socket","selectedUser","userExist","text","setText","recieverD","setRecieverD","messages","setMessages","openModal","setOpenModal","submitted","setSubmitted","currentUser","setCurrentUser","isViewerOpen","setIsViewerOpen","cancelUploadDisable","setcancelUploadDisable","currentImage","setCurrentImage","images","setImages","fileStatus","setFileStatus","files","setFiles","fileLoading","setFileLoading","alerted","setAlerted","openEmojiModel","setopenEmojiModel","rData","ref","sort","a","b","date","localeCompare","on","receiver","id","sender","temp","type","sent_at","format","filename","prev","push","Object","keys","length","user","emit","header","auth_token","token","sendData","removeEmptySpace","replace","data","addFile","e","onlyFiles","dd","findIndex","eee","name","file","originFileObj","console","log","fsize","size","Math","round","setTimeout","removeFile","index","dataList","splice","fileStatusSet","addWarroomFile","imageFile","f","forEach","image","form","FormData","element","append","postData","then","res","s","catch","err","error","handleDonl","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","handleDownload","get","responseType","openImageViewer","i","closeImageViewer","openEmoji","selectedEmoji","native","imageupload","value","current","onImageChange","event","preventDefault","target","aban","display","fontWeight","fontSize","color","cursor","xs","sm","md","lg","xl","charAt","addEventListener","currentTarget","scroll","top","scrollHeight","behavior","map","marginTop","padding","width","wordBreak","justifyContent","opacity","input","key","shiftKey","content","maxHeight","overflow","includes","position","bottom","right","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport Avatars from \"react-avatar\";\nimport { Button, message, Upload, Avatar } from \"antd\";\nimport axios from \"axios\";\nimport ImageViewer from \"react-simple-image-viewer\";\nimport { RiSendPlaneLine } from \"react-icons/ri\";\nimport ModalField from \"../../component/Modal/ModalDemo\";\nimport Icons from \"../../component/Icons/Icons\";\nimport APi from \"../../core/chatRedux/axios\";\nimport \"../chat/chat.scss\";\nimport { ChatStyle } from \"./ChayStyle.js\";\nimport moment from \"moment\";\nimport { getData } from \"../../core/locaStorage/Local\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\nimport { BsEmojiSmile } from \"react-icons/bs\";\n\nconst Chat = ({ socket, selectedUser, userExist }) => {\n  const [text, setText] = useState(\"\");\n  const [recieverD, setRecieverD] = useState({});\n  const [messages, setMessages] = useState([]);\n  const [openModal, setOpenModal] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n  const [cancelUploadDisable, setcancelUploadDisable] = useState(false);\n  const [currentImage, setCurrentImage] = useState(0);\n  const [images, setImages] = useState([]);\n\n  const [fileStatus, setFileStatus] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [fileLoading, setFileLoading] = useState(false);\n  const [alerted, setAlerted] = useState(false);\n  const [openEmojiModel, setopenEmojiModel] = useState(false);\n\n  let rData;\n\n  const ref = useRef(\"\");\n\n  // socket Response\n\n  messages.sort(function (a, b) {\n    return a.date.localeCompare(b.date);\n  });\n  // console.log(\"socket\", socket);\n\n  //connecting responce\n  // useEffect(() => {\n  //   socket.on(\"connect\", () => {\n  //     console.log(\"Connected\");\n  //   });\n  //   socket.on(\"disconnect\", () => {\n  //     console.log(\"Disconnected\");\n  //   });\n  //   socket.io.on(\"reconnect\", (attempt) => {\n  //     console.log(\"reconnect\", attempt);\n  //   });\n  //   socket.io.on(\"reconnect_attempt\", (attempt) => {\n  //     console.log(\"reconnect_attempt\", attempt);\n  //   });\n  //   socket.io.on(\"reconnect_error\", (error) => {\n  //     console.log(\"reconnect_error\", error);\n  //   });\n  // }, [socket]);\n\n  // chat Response\n\n  useEffect(() => {\n    socket.on(\"message\", (message) => {\n      if (getData(\"selectedUser\")) {\n        if (\n          message.receiver.id === getData(\"selectedUser\").id ||\n          message.sender.id === getData(\"selectedUser\").id\n        ) {\n          let temp = {\n            type: message.type ? message.type : null,\n            sender: message.sender,\n            receiver: message.receiver,\n            text: message.message,\n            date: moment(message.sent_at).format(\"YYYY-MM-DD HH:mm:ss\"),\n            filename: message.filename,\n          };\n          setMessages((prev) => {\n            prev.push(temp);\n            return prev;\n          });\n        }\n        setFileLoading(false);\n        setOpenModal(false);\n        setFiles([]);\n      }\n    });\n  }, [socket]);\n\n  // messageHistroy Response\n\n  useEffect(() => {\n    socket.on(\"messsageHistory\", (message) => {\n      let temp = {\n        type: message.type ? message.type : null,\n        sender: message.sender,\n        receiver: message.receiver,\n        text: message.message,\n        date: moment(message.sent_at).format(\"YYYY-MM-DD HH:mm:ss\"),\n        filename: message.filename,\n      };\n      setMessages((prev) => {\n        prev.push(temp);\n        return prev;\n      });\n      setFileLoading(false);\n      setOpenModal(false);\n      setFiles([]);\n    });\n  }, [socket]);\n\n  // set CurrentUSerTO local\n\n  useEffect(() => {\n    // setMessages([]);\n    if (recieverD && Object.keys(recieverD).length === 0) {\n      setSubmitted(true);\n    } else {\n      setSubmitted(false);\n    }\n    const user = getData(\"user\");\n    setCurrentUser(user);\n  }, [recieverD]);\n\n  // reciever detail\n\n  useEffect(() => {\n    setMessages([]);\n    rData = getData(\"selectedUser\");\n    if (rData && Object.keys(rData).length !== 0) {\n      setRecieverD(rData);\n    } else {\n      setRecieverD({});\n    }\n    if (rData && Object.keys(rData).length !== 0) {\n      const user = getData(\"user\");\n      socket.emit(\"messageHistory\", {\n        sender: user.id,\n        receiver: rData.id,\n        header: { auth_token: getData(\"user\").token },\n      });\n    }\n  }, [selectedUser]);\n\n  const sendData = () => {\n    let removeEmptySpace = text.replace(/^\\s+/, \"\").replace(/\\s+$/, \"\");\n    if (removeEmptySpace === \"\") {\n    } else {\n      if (text !== \"\" && currentUser && recieverD) {\n        //final data\n        let data = {\n          sender: currentUser.id,\n          receiver: recieverD.id,\n          type: \"chat\",\n          message: text,\n        };\n\n        data.header = {};\n        data.header.auth_token = getData(\"user\").token;\n        socket.emit(\"chat\", data);\n        setText(\"\");\n      }\n    }\n  };\n\n  // upload\n  const addFile = (e) => {\n    // setAlerted(false);\n    const onlyFiles = [...files];\n    const dd = files.findIndex((eee) => eee.name === e.file.originFileObj.name);\n    console.log(e.file.type);\n    if (e.file.type !== \"\") {\n      if (dd === -1) {\n        const fsize = e.file.size;\n        const file = Math.round(fsize / 1024);\n        console.log(\"vv.v..vv.\");\n        if (file >= 4096) {\n          if (alerted === false) {\n            // message.error(\"please select a file less than 4mb\");\n            setAlerted(true);\n          }\n        } else {\n          onlyFiles.push(e.file.originFileObj);\n        }\n      }\n      setFiles([...onlyFiles]);\n    } else {\n      if (alerted === false) {\n        // message.error(\"Unknown File Type !\");\n        setAlerted(true);\n      }\n    }\n    setTimeout(() => {\n      setAlerted(false);\n    }, 1000);\n  };\n\n  const removeFile = (index) => {\n    const dataList = files;\n    dataList.splice(index, 1);\n    setFiles([...dataList]);\n    const fileStatusSet = fileStatus;\n    fileStatusSet.splice(index, 1);\n    setFileStatus([...fileStatusSet]);\n  };\n\n  // submit file\n\n  const addWarroomFile = (imageFile) => {\n    setcancelUploadDisable(true);\n    setFileLoading(true);\n    const f = [];\n    imageFile.forEach((dd, index) => {\n      f[index] = { index: index, image: dd };\n    });\n    if (currentUser && recieverD) {\n      const form = new FormData();\n      imageFile.forEach((element) => {\n        form.append(\"files\", element);\n      });\n      form.append(\"sender\", currentUser.id);\n      form.append(\"receiver\", recieverD.id);\n      form.append(\"type\", \"image\");\n\n      APi.postData(form)\n        .then((res) => {\n          const s = {};\n          s.header = {};\n          s.header.auth_token = getData(\"user\").token;\n          s.files = [...res.data.data];\n          socket.emit(\"imageResponse\", s);\n          setOpenModal(false);\n          setFileLoading(false);\n          setFiles([]);\n          setcancelUploadDisable(false);\n        })\n        .catch((err) => {\n          console.error(err);\n          setcancelUploadDisable(false);\n        });\n    }\n  };\n\n  // download logic\n\n  const handleDonl = (file, filename) => {\n    const url = window.URL.createObjectURL(new Blob([file]));\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.setAttribute(\"download\", filename);\n    document.body.appendChild(link);\n    link.click();\n  };\n\n  // handle image download\n\n  const handleDownload = (url, filename) => {\n    axios\n      .get(url, {\n        responseType: \"blob\",\n      })\n      .then((res) => {\n        handleDonl(res.data, filename);\n      });\n  };\n\n  // image preview\n\n  const openImageViewer = useCallback((index, i) => {\n    setCurrentImage(index);\n    setImages([i]);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setImages([]);\n    setIsViewerOpen(false);\n  };\n\n  //send emoji\n  const openEmoji = () => {\n    setopenEmojiModel(!openEmojiModel);\n  };\n\n  const selectedEmoji = (e) => {\n    console.log(\"emoji\", e.native);\n    setText(message + e.native);\n    setopenEmojiModel(false);\n  };\n\n  //upload image preview\n  const imageupload = () => {\n    const value = ref.current.click();\n  };\n\n  const onImageChange = (event) => {\n    event.preventDefault();\n    let files = event.target.files;\n\n    let temp = [];\n    for (let a in files) {\n      temp.push(files[a]);\n    }\n    let aban = temp.splice(0, temp.length - 2);\n    setImages(aban);\n    addWarroomFile(aban);\n  };\n  return (\n    <ChatStyle>\n      <input\n        type=\"file\"\n        onChange={(event) => onImageChange(event)}\n        ref={ref}\n        style={{ display: \"none\" }}\n        multiple\n      />\n      <div className=\"chat\">\n        {userExist === false || Object.keys(recieverD).length === 0 ? (\n          <div className=\"nodata-page\">\n            <Icons type=\"moontech\" />\n            <span\n              style={{\n                fontWeight: \"bolder\",\n                fontSize: \"20px\",\n                color: \"#70bde9\",\n              }}\n            >\n              No conversation selected\n            </span>\n          </div>\n        ) : (\n          <>\n            <div className=\"user-name\">\n              <h2>\n                <Avatar\n                  style={{ cursor: \"pointer\" }}\n                  size={{\n                    xs: 30,\n                    sm: 30,\n                    md: 30,\n                    lg: 30,\n                    xl: 30,\n                  }}\n                >\n                  {recieverD && Object.keys(recieverD).length !== 0\n                    ? recieverD.name.charAt(0)\n                    : \" * \"}\n                  {currentUser.name ? `${currentUser.name.charAt(0)}` : null}\n                </Avatar>\n                {recieverD && Object.keys(recieverD).length !== 0\n                  ? recieverD.name\n                  : \"_ _ _\"}\n              </h2>\n            </div>\n            <div\n              ref={(ref) => {\n                if (ref !== null) {\n                  ref.addEventListener(\"DOMNodeInserted\", (event) => {\n                    const { currentTarget: target } = event;\n                    target.scroll({\n                      top: target.scrollHeight,\n                      behavior: \"smooth\",\n                    });\n                  });\n                }\n              }}\n              className=\"chat-message\"\n            >\n              {messages.map((i, index) => (\n                <div\n                  className={\n                    i.sender.id === currentUser.id\n                      ? \"message mess-right\"\n                      : \"message\"\n                  }\n                  key={index}\n                >\n                  {i.type === \"image\" ? (\n                    <>\n                      <span>{i.sender.name}</span>\n                      <p\n                        className={\n                          i.sender.id !== currentUser.id\n                            ? \"img hoverable\"\n                            : \"img\"\n                        }\n                      >\n                        <img\n                          src={`${i.text}`}\n                          onClick={() => openImageViewer(0, i.text)}\n                          alt=\"img\"\n                          style={{ cursor: \"pointer\" }}\n                        />\n                      </p>\n                      {i.sender.id !== currentUser.id ? (\n                        <>\n                          <Icons\n                            type=\"Download\"\n                            onClick={() => handleDownload(i.text, i.filename)}\n                          />\n                          <span>{i.date}</span>\n                        </>\n                      ) : (\n                        <span style={{ marginTop: \"3px\", padding: \"unset\" }}>\n                          <span>{i.date}</span>\n                          <Icons\n                            type=\"Download\"\n                            onClick={() => handleDownload(i.text, i.filename)}\n                          />\n                        </span>\n                      )}\n                    </>\n                  ) : i.type === \"file\" ? (\n                    <>\n                      <span>{i.sender.name}</span>\n                      <p style={{ width: \"100%\" }}>\n                        <span\n                          style={{\n                            display: \"flex\",\n                            wordBreak: \"break-all\",\n                          }}\n                          className={\n                            i.sender.id === currentUser.id\n                              ? \"fileType-right\"\n                              : \"fileType\"\n                          }\n                        >\n                          <svg\n                            fill=\"#000000\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            viewBox=\"0 0 80 80\"\n                            width=\"18px\"\n                            height=\"18px\"\n                          >\n                            <path d=\"M 15 9 L 15 71 L 65 71 L 65 23.585938 L 50.414063 9 Z M 17 11 L 49 11 L 49 25 L 63 25 L 63 69 L 17 69 Z M 51 12.414063 L 61.585938 23 L 51 23 Z M 22 13 C 21.449219 13 21 13.449219 21 14 C 21 14.550781 21.449219 15 22 15 C 22.550781 15 23 14.550781 23 14 C 23 13.449219 22.550781 13 22 13 Z M 22 17 C 21.449219 17 21 17.449219 21 18 C 21 18.550781 21.449219 19 22 19 C 22.550781 19 23 18.550781 23 18 C 23 17.449219 22.550781 17 22 17 Z M 22 21 C 21.449219 21 21 21.449219 21 22 C 21 22.550781 21.449219 23 22 23 C 22.550781 23 23 22.550781 23 22 C 23 21.449219 22.550781 21 22 21 Z M 22 25 C 21.449219 25 21 25.449219 21 26 C 21 26.550781 21.449219 27 22 27 C 22.550781 27 23 26.550781 23 26 C 23 25.449219 22.550781 25 22 25 Z M 22 29 C 21.449219 29 21 29.449219 21 30 C 21 30.550781 21.449219 31 22 31 C 22.550781 31 23 30.550781 23 30 C 23 29.449219 22.550781 29 22 29 Z M 22 33 C 21.449219 33 21 33.449219 21 34 C 21 34.550781 21.449219 35 22 35 C 22.550781 35 23 34.550781 23 34 C 23 33.449219 22.550781 33 22 33 Z M 22 37 C 21.449219 37 21 37.449219 21 38 C 21 38.550781 21.449219 39 22 39 C 22.550781 39 23 38.550781 23 38 C 23 37.449219 22.550781 37 22 37 Z M 22 41 C 21.449219 41 21 41.449219 21 42 C 21 42.550781 21.449219 43 22 43 C 22.550781 43 23 42.550781 23 42 C 23 41.449219 22.550781 41 22 41 Z M 22 45 C 21.449219 45 21 45.449219 21 46 C 21 46.550781 21.449219 47 22 47 C 22.550781 47 23 46.550781 23 46 C 23 45.449219 22.550781 45 22 45 Z M 22 49 C 21.449219 49 21 49.449219 21 50 C 21 50.550781 21.449219 51 22 51 C 22.550781 51 23 50.550781 23 50 C 23 49.449219 22.550781 49 22 49 Z M 22 53 C 21.449219 53 21 53.449219 21 54 C 21 54.550781 21.449219 55 22 55 C 22.550781 55 23 54.550781 23 54 C 23 53.449219 22.550781 53 22 53 Z M 22 57 C 21.449219 57 21 57.449219 21 58 C 21 58.550781 21.449219 59 22 59 C 22.550781 59 23 58.550781 23 58 C 23 57.449219 22.550781 57 22 57 Z M 22 61 C 21.449219 61 21 61.449219 21 62 C 21 62.550781 21.449219 63 22 63 C 22.550781 63 23 62.550781 23 62 C 23 61.449219 22.550781 61 22 61 Z M 22 65 C 21.449219 65 21 65.449219 21 66 C 21 66.550781 21.449219 67 22 67 C 22.550781 67 23 66.550781 23 66 C 23 65.449219 22.550781 65 22 65 Z\" />\n                          </svg>\n                          {i.filename}\n                        </span>\n                      </p>\n                      {i.sender.id !== currentUser.id ? (\n                        <>\n                          <Icons\n                            type=\"Download\"\n                            onClick={() => handleDownload(i.text, i.filename)}\n                          />\n                          <span>{i.date}</span>\n                        </>\n                      ) : (\n                        <span style={{ marginTop: \"3px\", padding: \"unset\" }}>\n                          <span>{i.date}</span>\n                          <Icons\n                            type=\"Download\"\n                            onClick={() => handleDownload(i.text, i.filename)}\n                          />\n                        </span>\n                      )}\n                    </>\n                  ) : (\n                    <>\n                      <span>{i.sender.name}</span>\n                      {i.sender.id !== currentUser.id ? (\n                        <div style={{ display: \"flex\" }}>\n                          <Avatars\n                            size=\"30\"\n                            name={i.sender.name}\n                            round={true}\n                          />\n                          <p>{i.text}</p>\n                        </div>\n                      ) : (\n                        <div style={{ display: \"flex\", justifyContent: \"end\" }}>\n                          <p>{i.text}</p>\n                          <Avatars\n                            googleId=\"118096717852922241760\"\n                            size=\"30\"\n                            name={i.sender.name}\n                            round={true}\n                          />\n                        </div>\n                      )}\n\n                      <span>{i.date}</span>\n                    </>\n                  )}\n                </div>\n              ))}\n            </div>\n            <div className=\"send\">\n              <input\n                placeholder=\"Enter Your Message\"\n                value={text}\n                style={{\n                  cursor: submitted ? \"not-allowed\" : \"text\",\n                  opacity: submitted ? 0.5 : 1,\n                }}\n                disabled={submitted}\n                onChange={(e) => setText(e.target.value)}\n                ref={(input) => (input = input)}\n                onKeyPress={(e) => {\n                  if (e.key === \"Enter\") {\n                    sendData();\n                  }\n                  if (e.key === \"Enter\" && e.shiftKey) {\n                    console.log(\"shift + enter\");\n                    e.preventDefault();\n                  }\n                }}\n              ></input>\n              <BsEmojiSmile onClick={openEmoji} style={{ cursor: \"pointer\" }} />\n              <div className=\"btn-box1\" onClick={() => imageupload()}>\n                <Icons className=\"svgIcon\" type=\"attachemt\" />\n              </div>\n              <div\n                className=\"btn-box\"\n                onClick={\n                  !submitted\n                    ? () => sendData()\n                    : () =>\n                        message.error({\n                          content: \"Select User to Send Message\",\n                        })\n                }\n              >\n                <RiSendPlaneLine className=\"btn-icon\" />\n              </div>\n            </div>\n          </>\n        )}\n\n        {/* upload file modal */}\n\n        <ModalField\n          visible={openModal}\n          title=\"Attachment\"\n          className=\"uploadmodal\"\n          onCancel={() => {\n            setOpenModal(false);\n            setFiles([]);\n            setFileLoading(false);\n          }}\n          footer={false}\n        >\n          <Upload\n            name=\"avatar\"\n            accept=\"crt\"\n            multiple\n            showUploadList={false}\n            onChange={(e) => {\n              addFile(e);\n            }}\n            className=\"uploadBox\"\n          >\n            <p className=\"ant-upload-drag-icon\">\n              <InboxOutlined />\n            </p>\n            <p className=\"ant-upload-text\">Click to this area to upload file</p>\n          </Upload>\n          <div\n            style={{\n              maxHeight: \"100px\",\n              overflow: \"auto\",\n              marginTop: \"15px\",\n            }}\n            className=\"overflowDiv\"\n          >\n            {files.length !== 0 &&\n              files.map((file, index) => (\n                <div\n                  className=\"controlLabel\"\n                  key={index}\n                  style={{ marginTop: \"15px\" }}\n                >\n                  {file.name}\n                  {`(${file.size / 1000} KB)`}\n                  {cancelUploadDisable ? (\n                    \"\"\n                  ) : (\n                    <Icons\n                      type=\"close\"\n                      icontype=\"globle\"\n                      id={`iFiles_close${index}`}\n                      className=\"removeFiles\"\n                      margin=\"10px\"\n                      onClick={() => removeFile(index)}\n                    />\n                  )}\n                </div>\n              ))}\n          </div>\n          <div className=\"footerContent\">\n            {files.length > 0 ? (\n              <Button\n                id=\"warroom_upload\"\n                disabled={fileStatus.includes(false) || false}\n                loading={fileLoading}\n                onClick={addWarroomFile}\n              >\n                Upload\n              </Button>\n            ) : null}\n          </div>\n        </ModalField>\n\n        {/* preview image */}\n        {/* {console.log(images, currentImage)} */}\n        {isViewerOpen && (\n          <ImageViewer\n            src={images}\n            currentIndex={currentImage}\n            onClose={closeImageViewer}\n          />\n        )}\n        {openEmojiModel && (\n          <Picker\n            set=\"google\"\n            showPreview={false}\n            style={{\n              position: \"absolute\",\n              bottom: \"160px\",\n              right: \"150px\",\n              borderRadius: \"10px 10px 0px 10px\",\n            }}\n            onSelect={(e) => selectedEmoji(e)}\n          />\n        )}\n      </div>\n    </ChatStyle>\n  );\n};\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}