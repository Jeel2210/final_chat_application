[{"C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\index.js":"1","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\App.js":"2","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\home\\home.js":"3","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\core\\locaStorage\\Local.js":"4","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\index.js":"5","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\register\\index.js":"6","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\home\\HomeStyle.js":"7","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\component\\RegexList.js":"8","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\component\\Comman\\Comman.js":"9","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\component\\Input\\InputDemo.js":"10","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\style.js":"11","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\register\\style.js":"12","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\core\\chatRedux\\axios.js":"13","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\chat\\chat.js":"14","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\GroupChat\\GroupChat.js":"15","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\sidebar\\Sidebar.js":"16","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\component\\Comman\\CommanStyle.js":"17","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\component\\Input\\InputStyle.js":"18","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\component\\Icons\\Icons.js":"19","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\sidebar\\SidebarStyle.js":"20","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\sidebarGroup\\GroupSidebar.js":"21","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\component\\Modal\\ModalDemo.js":"22","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\sidebarGroup\\GroupStyle.js":"23","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\chat\\ChayStyle.js":"24","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\GroupChat\\GroupStyle.js":"25","C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\index.js":"26","C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\App.js":"27","C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\home\\home.js":"28","C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\core\\locaStorage\\Local.js":"29","C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\index.js":"30","C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\register\\index.js":"31","C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\home\\HomeStyle.js":"32","C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\component\\Comman\\Comman.js":"33","C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\component\\RegexList.js":"34","C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\component\\Input\\InputDemo.js":"35","C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\style.js":"36","C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\register\\style.js":"37","C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\core\\chatRedux\\axios.js":"38","C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\chat\\chat.js":"39","C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\GroupChat\\GroupChat.js":"40","C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\sidebar\\Sidebar.js":"41","C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\component\\Comman\\CommanStyle.js":"42","C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\component\\Input\\InputStyle.js":"43","C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\component\\Icons\\Icons.js":"44","C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\sidebar\\SidebarStyle.js":"45","C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\GroupChat\\GroupStyle.js":"46","C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\sidebarGroup\\GroupSidebar.js":"47","C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\component\\Modal\\ModalDemo.js":"48","C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\chat\\ChayStyle.js":"49","C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\sidebarGroup\\GroupStyle.js":"50"},{"size":146,"mtime":1645161901387,"results":"51","hashOfConfig":"52"},{"size":1223,"mtime":1645161901421,"results":"53","hashOfConfig":"52"},{"size":5006,"mtime":1645161901915,"results":"54","hashOfConfig":"52"},{"size":578,"mtime":1645161901511,"results":"55","hashOfConfig":"52"},{"size":3204,"mtime":1645161901816,"results":"56","hashOfConfig":"52"},{"size":7564,"mtime":1645161902086,"results":"57","hashOfConfig":"52"},{"size":3480,"mtime":1645161901931,"results":"58","hashOfConfig":"52"},{"size":1018,"mtime":1645161901647,"results":"59","hashOfConfig":"52"},{"size":801,"mtime":1645161901779,"results":"60","hashOfConfig":"52"},{"size":576,"mtime":1645161901689,"results":"61","hashOfConfig":"52"},{"size":218,"mtime":1645161901832,"results":"62","hashOfConfig":"52"},{"size":2790,"mtime":1645161902102,"results":"63","hashOfConfig":"52"},{"size":1123,"mtime":1645161901468,"results":"64","hashOfConfig":"52"},{"size":21606,"mtime":1645161901997,"results":"65","hashOfConfig":"52"},{"size":20680,"mtime":1645161902027,"results":"66","hashOfConfig":"52"},{"size":14745,"mtime":1645161901877,"results":"67","hashOfConfig":"52"},{"size":418,"mtime":1645161901795,"results":"68","hashOfConfig":"52"},{"size":2269,"mtime":1645161901705,"results":"69","hashOfConfig":"52"},{"size":46299,"mtime":1645161901735,"results":"70","hashOfConfig":"52"},{"size":4062,"mtime":1645161901852,"results":"71","hashOfConfig":"52"},{"size":10205,"mtime":1645161902130,"results":"72","hashOfConfig":"52"},{"size":306,"mtime":1645161901758,"results":"73","hashOfConfig":"52"},{"size":3964,"mtime":1645161902147,"results":"74","hashOfConfig":"52"},{"size":463,"mtime":1645161901951,"results":"75","hashOfConfig":"52"},{"size":494,"mtime":1645161902066,"results":"76","hashOfConfig":"52"},{"size":146,"mtime":1645161901387,"results":"77","hashOfConfig":"78"},{"size":1223,"mtime":1645161901421,"results":"79","hashOfConfig":"78"},{"size":5006,"mtime":1645161901915,"results":"80","hashOfConfig":"78"},{"size":578,"mtime":1645161901511,"results":"81","hashOfConfig":"78"},{"size":3204,"mtime":1645161901816,"results":"82","hashOfConfig":"78"},{"size":7564,"mtime":1645161902086,"results":"83","hashOfConfig":"78"},{"size":3480,"mtime":1645161901931,"results":"84","hashOfConfig":"78"},{"size":801,"mtime":1645161901779,"results":"85","hashOfConfig":"78"},{"size":1018,"mtime":1645161901647,"results":"86","hashOfConfig":"78"},{"size":576,"mtime":1645161901689,"results":"87","hashOfConfig":"78"},{"size":218,"mtime":1645161901832,"results":"88","hashOfConfig":"78"},{"size":2790,"mtime":1645161902102,"results":"89","hashOfConfig":"78"},{"size":1123,"mtime":1645161901468,"results":"90","hashOfConfig":"78"},{"size":21606,"mtime":1645161901997,"results":"91","hashOfConfig":"78"},{"size":20680,"mtime":1645161902027,"results":"92","hashOfConfig":"78"},{"size":14745,"mtime":1645161901877,"results":"93","hashOfConfig":"78"},{"size":418,"mtime":1645161901795,"results":"94","hashOfConfig":"78"},{"size":2269,"mtime":1645161901705,"results":"95","hashOfConfig":"78"},{"size":46299,"mtime":1645161901735,"results":"96","hashOfConfig":"78"},{"size":4062,"mtime":1645161901852,"results":"97","hashOfConfig":"78"},{"size":494,"mtime":1645161902066,"results":"98","hashOfConfig":"78"},{"size":10205,"mtime":1645161902130,"results":"99","hashOfConfig":"78"},{"size":306,"mtime":1645161901758,"results":"100","hashOfConfig":"78"},{"size":463,"mtime":1645161901951,"results":"101","hashOfConfig":"78"},{"size":3964,"mtime":1645161902147,"results":"102","hashOfConfig":"78"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"p6cna6",{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8fw3vj",{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\index.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\App.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\home\\home.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\core\\locaStorage\\Local.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\index.js",["207"],"import React, { useEffect, useState } from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router\";\r\nimport axios from \"../core/chatRedux/axios\";\r\nimport { getData, setData } from \"../core/locaStorage/Local\";\r\nimport Chat from \"./chat/chat\";\r\nimport GroupChat from \"./GroupChat/GroupChat\";\r\nimport Sidebar from \"./sidebar/Sidebar\";\r\nimport { PageStyle } from \"./style\";\r\nimport { Row, Col, Divider } from \"antd\";\r\n\r\nconst PageRoute = (props) => {\r\n  const { rederpage, socket } = props;\r\n  const [selectedUser, setSelectedUser] = useState({});\r\n  const [selectedGroup, setSelectedGroup] = useState({});\r\n  const [userExist, setUserExist] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .getAllUsers({\r\n        Authorization: `Bearer ${getData(\"user\").token}`,\r\n      })\r\n      .then((res) => {\r\n        if (res.data.status === true) {\r\n          const userData = getData(\"user\");\r\n          const list = [...res.data.data];\r\n          const index = list.findIndex((e) => e.id === userData.id);\r\n          if (index !== -1) {\r\n            list.splice(index, 1);\r\n          }\r\n          setData(\"localUserList\", list);\r\n        } else {\r\n          setData(\"localUserList\", []);\r\n        }\r\n      })\r\n      .catch(() => {});\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"groupListResponse\", (list) => {\r\n      if (list && list.length !== 0) {\r\n        setUserExist(false);\r\n      } else {\r\n        setUserExist(false);\r\n      }\r\n    });\r\n  }, [socket]);\r\n\r\n  const ActiveGroup = getData(\"groupActive\");\r\n\r\n  return (\r\n    <PageStyle>\r\n      <Row\r\n        gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}\r\n        style={{ margin: \"0px\", padding: \"0px\" }}\r\n        className=\"app_window\"\r\n      >\r\n        <Col\r\n          className=\"gutter-row\"\r\n          span={4}\r\n          style={{ margin: \"0px\", padding: \"0px\" }}\r\n        >\r\n          <Sidebar\r\n            setSelectedUser={setSelectedUser}\r\n            socket={socket}\r\n            setSelectedGroup={setSelectedGroup}\r\n            setUserExist={setUserExist}\r\n          />\r\n        </Col>\r\n        <Col\r\n          className=\"gutter-row\"\r\n          span={20}\r\n          style={{ margin: \"0px\", padding: \"0px\" }}\r\n        >\r\n          <Route\r\n            render={() =>\r\n              ActiveGroup ? (\r\n                <Redirect to=\"/chat/group\" exact />\r\n              ) : (\r\n                <Redirect to=\"/chat\" />\r\n              )\r\n            }\r\n          ></Route>\r\n          <Switch>\r\n            {ActiveGroup === true ? (\r\n              <Route path=\"/chat/group\">\r\n                <GroupChat\r\n                  socket={socket}\r\n                  userExist={userExist}\r\n                  selectedGroup={selectedGroup}\r\n                />\r\n              </Route>\r\n            ) : (\r\n              <Route path=\"/chat\">\r\n                <Chat\r\n                  username={props.match.params.username}\r\n                  socket={socket}\r\n                  selectedUser={selectedUser}\r\n                  rederpage={rederpage}\r\n                  userExist={userExist}\r\n                />\r\n              </Route>\r\n            )}\r\n          </Switch>\r\n        </Col>\r\n      </Row>\r\n    </PageStyle>\r\n  );\r\n};\r\n\r\nexport default PageRoute;\r\n","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\register\\index.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\home\\HomeStyle.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\component\\RegexList.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\component\\Comman\\Comman.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\component\\Input\\InputDemo.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\style.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\register\\style.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\core\\chatRedux\\axios.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\chat\\chat.js",["208","209","210"],"import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport Avatars from \"react-avatar\";\nimport { Button, message, Upload, Avatar } from \"antd\";\nimport axios from \"axios\";\nimport ImageViewer from \"react-simple-image-viewer\";\nimport { RiSendPlaneLine } from \"react-icons/ri\";\nimport ModalField from \"../../component/Modal/ModalDemo\";\nimport Icons from \"../../component/Icons/Icons\";\nimport APi from \"../../core/chatRedux/axios\";\nimport \"../chat/chat.scss\";\nimport { ChatStyle } from \"./ChayStyle.js\";\nimport moment from \"moment\";\nimport { getData } from \"../../core/locaStorage/Local\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\nimport { BsEmojiSmile } from \"react-icons/bs\";\n\nconst Chat = ({ socket, selectedUser, userExist }) => {\n  const [text, setText] = useState(\"\");\n  const [recieverD, setRecieverD] = useState({});\n  const [messages, setMessages] = useState([]);\n  const [openModal, setOpenModal] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n  const [cancelUploadDisable, setcancelUploadDisable] = useState(false);\n  const [currentImage, setCurrentImage] = useState(0);\n  const [images, setImages] = useState([]);\n\n  const [fileStatus, setFileStatus] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [fileLoading, setFileLoading] = useState(false);\n  const [alerted, setAlerted] = useState(false);\n  const [openEmojiModel, setopenEmojiModel] = useState(false);\n\n  let rData;\n\n  const ref = useRef(\"\");\n\n  // socket Response\n\n  messages.sort(function (a, b) {\n    return a.date.localeCompare(b.date);\n  });\n  // console.log(\"socket\", socket);\n\n  //connecting responce\n  // useEffect(() => {\n  //   socket.on(\"connect\", () => {\n  //     console.log(\"Connected\");\n  //   });\n  //   socket.on(\"disconnect\", () => {\n  //     console.log(\"Disconnected\");\n  //   });\n  //   socket.io.on(\"reconnect\", (attempt) => {\n  //     console.log(\"reconnect\", attempt);\n  //   });\n  //   socket.io.on(\"reconnect_attempt\", (attempt) => {\n  //     console.log(\"reconnect_attempt\", attempt);\n  //   });\n  //   socket.io.on(\"reconnect_error\", (error) => {\n  //     console.log(\"reconnect_error\", error);\n  //   });\n  // }, [socket]);\n\n  // chat Response\n\n  useEffect(() => {\n    socket.on(\"message\", (message) => {\n      if (getData(\"selectedUser\")) {\n        if (\n          message.receiver.id === getData(\"selectedUser\").id ||\n          message.sender.id === getData(\"selectedUser\").id\n        ) {\n          let temp = {\n            type: message.type ? message.type : null,\n            sender: message.sender,\n            receiver: message.receiver,\n            text: message.message,\n            date: moment(message.sent_at).format(\"YYYY-MM-DD HH:mm:ss\"),\n            filename: message.filename,\n          };\n          setMessages((prev) => {\n            prev.push(temp);\n            return prev;\n          });\n        }\n        setFileLoading(false);\n        setOpenModal(false);\n        setFiles([]);\n      }\n    });\n  }, [socket]);\n\n  // messageHistroy Response\n\n  useEffect(() => {\n    socket.on(\"messsageHistory\", (message) => {\n      let temp = {\n        type: message.type ? message.type : null,\n        sender: message.sender,\n        receiver: message.receiver,\n        text: message.message,\n        date: moment(message.sent_at).format(\"YYYY-MM-DD HH:mm:ss\"),\n        filename: message.filename,\n      };\n      setMessages((prev) => {\n        prev.push(temp);\n        return prev;\n      });\n      setFileLoading(false);\n      setOpenModal(false);\n      setFiles([]);\n    });\n  }, [socket]);\n\n  // set CurrentUSerTO local\n\n  useEffect(() => {\n    // setMessages([]);\n    if (recieverD && Object.keys(recieverD).length === 0) {\n      setSubmitted(true);\n    } else {\n      setSubmitted(false);\n    }\n    const user = getData(\"user\");\n    setCurrentUser(user);\n  }, [recieverD]);\n\n  // reciever detail\n\n  useEffect(() => {\n    setMessages([]);\n    rData = getData(\"selectedUser\");\n    if (rData && Object.keys(rData).length !== 0) {\n      setRecieverD(rData);\n    } else {\n      setRecieverD({});\n    }\n    if (rData && Object.keys(rData).length !== 0) {\n      const user = getData(\"user\");\n      socket.emit(\"messageHistory\", {\n        sender: user.id,\n        receiver: rData.id,\n        header: { auth_token: getData(\"user\").token },\n      });\n    }\n  }, [selectedUser]);\n\n  const sendData = () => {\n    let removeEmptySpace = text.replace(/^\\s+/, \"\").replace(/\\s+$/, \"\");\n    if (removeEmptySpace === \"\") {\n    } else {\n      if (text !== \"\" && currentUser && recieverD) {\n        //final data\n        let data = {\n          sender: currentUser.id,\n          receiver: recieverD.id,\n          type: \"chat\",\n          message: text,\n        };\n\n        data.header = {};\n        data.header.auth_token = getData(\"user\").token;\n        socket.emit(\"chat\", data);\n        setText(\"\");\n      }\n    }\n  };\n\n  // upload\n  const addFile = (e) => {\n    // setAlerted(false);\n    const onlyFiles = [...files];\n    const dd = files.findIndex((eee) => eee.name === e.file.originFileObj.name);\n    console.log(e.file.type);\n    if (e.file.type !== \"\") {\n      if (dd === -1) {\n        const fsize = e.file.size;\n        const file = Math.round(fsize / 1024);\n        console.log(\"vv.v..vv.\");\n        if (file >= 4096) {\n          if (alerted === false) {\n            // message.error(\"please select a file less than 4mb\");\n            setAlerted(true);\n          }\n        } else {\n          onlyFiles.push(e.file.originFileObj);\n        }\n      }\n      setFiles([...onlyFiles]);\n    } else {\n      if (alerted === false) {\n        // message.error(\"Unknown File Type !\");\n        setAlerted(true);\n      }\n    }\n    setTimeout(() => {\n      setAlerted(false);\n    }, 1000);\n  };\n\n  const removeFile = (index) => {\n    const dataList = files;\n    dataList.splice(index, 1);\n    setFiles([...dataList]);\n    const fileStatusSet = fileStatus;\n    fileStatusSet.splice(index, 1);\n    setFileStatus([...fileStatusSet]);\n  };\n\n  // submit file\n\n  const addWarroomFile = (imageFile) => {\n    setcancelUploadDisable(true);\n    setFileLoading(true);\n    const f = [];\n    imageFile.forEach((dd, index) => {\n      f[index] = { index: index, image: dd };\n    });\n    if (currentUser && recieverD) {\n      const form = new FormData();\n      imageFile.forEach((element) => {\n        form.append(\"files\", element);\n      });\n      form.append(\"sender\", currentUser.id);\n      form.append(\"receiver\", recieverD.id);\n      form.append(\"type\", \"image\");\n\n      APi.postData(form)\n        .then((res) => {\n          const s = {};\n          s.header = {};\n          s.header.auth_token = getData(\"user\").token;\n          s.files = [...res.data.data];\n          socket.emit(\"imageResponse\", s);\n          setOpenModal(false);\n          setFileLoading(false);\n          setFiles([]);\n          setcancelUploadDisable(false);\n        })\n        .catch((err) => {\n          console.error(err);\n          setcancelUploadDisable(false);\n        });\n    }\n  };\n\n  // download logic\n\n  const handleDonl = (file, filename) => {\n    const url = window.URL.createObjectURL(new Blob([file]));\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.setAttribute(\"download\", filename);\n    document.body.appendChild(link);\n    link.click();\n  };\n\n  // handle image download\n\n  const handleDownload = (url, filename) => {\n    axios\n      .get(url, {\n        responseType: \"blob\",\n      })\n      .then((res) => {\n        handleDonl(res.data, filename);\n      });\n  };\n\n  // image preview\n\n  const openImageViewer = useCallback((index, i) => {\n    setCurrentImage(index);\n    setImages([i]);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setImages([]);\n    setIsViewerOpen(false);\n  };\n\n  //send emoji\n  const openEmoji = () => {\n    setopenEmojiModel(!openEmojiModel);\n  };\n\n  const selectedEmoji = (e) => {\n    console.log(\"emoji\", e.native);\n    setText(message + e.native);\n    setopenEmojiModel(false);\n  };\n\n  //upload image preview\n  const imageupload = () => {\n    const value = ref.current.click();\n  };\n\n  const onImageChange = (event) => {\n    event.preventDefault();\n    let files = event.target.files;\n\n    let temp = [];\n    for (let a in files) {\n      temp.push(files[a]);\n    }\n    let aban = temp.splice(0, temp.length - 2);\n    setImages(aban);\n    addWarroomFile(aban);\n  };\n  return (\n    <ChatStyle>\n      <input\n        type=\"file\"\n        onChange={(event) => onImageChange(event)}\n        ref={ref}\n        style={{ display: \"none\" }}\n        multiple\n      />\n      <div className=\"chat\">\n        {userExist === false || Object.keys(recieverD).length === 0 ? (\n          <div className=\"nodata-page\">\n            <Icons type=\"moontech\" />\n            <span\n              style={{\n                fontWeight: \"bolder\",\n                fontSize: \"20px\",\n                color: \"#70bde9\",\n              }}\n            >\n              No conversation selected\n            </span>\n          </div>\n        ) : (\n          <>\n            <div className=\"user-name\">\n              <h2>\n                <Avatar\n                  style={{ cursor: \"pointer\" }}\n                  size={{\n                    xs: 30,\n                    sm: 30,\n                    md: 30,\n                    lg: 30,\n                    xl: 30,\n                  }}\n                >\n                  {recieverD && Object.keys(recieverD).length !== 0\n                    ? recieverD.name.charAt(0)\n                    : \" * \"}\n                  {currentUser.name ? `${currentUser.name.charAt(0)}` : null}\n                </Avatar>\n                {recieverD && Object.keys(recieverD).length !== 0\n                  ? recieverD.name\n                  : \"_ _ _\"}\n              </h2>\n            </div>\n            <div\n              ref={(ref) => {\n                if (ref !== null) {\n                  ref.addEventListener(\"DOMNodeInserted\", (event) => {\n                    const { currentTarget: target } = event;\n                    target.scroll({\n                      top: target.scrollHeight,\n                      behavior: \"smooth\",\n                    });\n                  });\n                }\n              }}\n              className=\"chat-message\"\n            >\n              {messages.map((i, index) => (\n                <div\n                  className={\n                    i.sender.id === currentUser.id\n                      ? \"message mess-right\"\n                      : \"message\"\n                  }\n                  key={index}\n                >\n                  {i.type === \"image\" ? (\n                    <>\n                      <span>{i.sender.name}</span>\n                      <p\n                        className={\n                          i.sender.id !== currentUser.id\n                            ? \"img hoverable\"\n                            : \"img\"\n                        }\n                      >\n                        <img\n                          src={`${i.text}`}\n                          onClick={() => openImageViewer(0, i.text)}\n                          alt=\"img\"\n                          style={{ cursor: \"pointer\" }}\n                        />\n                      </p>\n                      {i.sender.id !== currentUser.id ? (\n                        <>\n                          <Icons\n                            type=\"Download\"\n                            onClick={() => handleDownload(i.text, i.filename)}\n                          />\n                          <span>{i.date}</span>\n                        </>\n                      ) : (\n                        <span style={{ marginTop: \"3px\", padding: \"unset\" }}>\n                          <span>{i.date}</span>\n                          <Icons\n                            type=\"Download\"\n                            onClick={() => handleDownload(i.text, i.filename)}\n                          />\n                        </span>\n                      )}\n                    </>\n                  ) : i.type === \"file\" ? (\n                    <>\n                      <span>{i.sender.name}</span>\n                      <p style={{ width: \"100%\" }}>\n                        <span\n                          style={{\n                            display: \"flex\",\n                            wordBreak: \"break-all\",\n                          }}\n                          className={\n                            i.sender.id === currentUser.id\n                              ? \"fileType-right\"\n                              : \"fileType\"\n                          }\n                        >\n                          <svg\n                            fill=\"#000000\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            viewBox=\"0 0 80 80\"\n                            width=\"18px\"\n                            height=\"18px\"\n                          >\n                            <path d=\"M 15 9 L 15 71 L 65 71 L 65 23.585938 L 50.414063 9 Z M 17 11 L 49 11 L 49 25 L 63 25 L 63 69 L 17 69 Z M 51 12.414063 L 61.585938 23 L 51 23 Z M 22 13 C 21.449219 13 21 13.449219 21 14 C 21 14.550781 21.449219 15 22 15 C 22.550781 15 23 14.550781 23 14 C 23 13.449219 22.550781 13 22 13 Z M 22 17 C 21.449219 17 21 17.449219 21 18 C 21 18.550781 21.449219 19 22 19 C 22.550781 19 23 18.550781 23 18 C 23 17.449219 22.550781 17 22 17 Z M 22 21 C 21.449219 21 21 21.449219 21 22 C 21 22.550781 21.449219 23 22 23 C 22.550781 23 23 22.550781 23 22 C 23 21.449219 22.550781 21 22 21 Z M 22 25 C 21.449219 25 21 25.449219 21 26 C 21 26.550781 21.449219 27 22 27 C 22.550781 27 23 26.550781 23 26 C 23 25.449219 22.550781 25 22 25 Z M 22 29 C 21.449219 29 21 29.449219 21 30 C 21 30.550781 21.449219 31 22 31 C 22.550781 31 23 30.550781 23 30 C 23 29.449219 22.550781 29 22 29 Z M 22 33 C 21.449219 33 21 33.449219 21 34 C 21 34.550781 21.449219 35 22 35 C 22.550781 35 23 34.550781 23 34 C 23 33.449219 22.550781 33 22 33 Z M 22 37 C 21.449219 37 21 37.449219 21 38 C 21 38.550781 21.449219 39 22 39 C 22.550781 39 23 38.550781 23 38 C 23 37.449219 22.550781 37 22 37 Z M 22 41 C 21.449219 41 21 41.449219 21 42 C 21 42.550781 21.449219 43 22 43 C 22.550781 43 23 42.550781 23 42 C 23 41.449219 22.550781 41 22 41 Z M 22 45 C 21.449219 45 21 45.449219 21 46 C 21 46.550781 21.449219 47 22 47 C 22.550781 47 23 46.550781 23 46 C 23 45.449219 22.550781 45 22 45 Z M 22 49 C 21.449219 49 21 49.449219 21 50 C 21 50.550781 21.449219 51 22 51 C 22.550781 51 23 50.550781 23 50 C 23 49.449219 22.550781 49 22 49 Z M 22 53 C 21.449219 53 21 53.449219 21 54 C 21 54.550781 21.449219 55 22 55 C 22.550781 55 23 54.550781 23 54 C 23 53.449219 22.550781 53 22 53 Z M 22 57 C 21.449219 57 21 57.449219 21 58 C 21 58.550781 21.449219 59 22 59 C 22.550781 59 23 58.550781 23 58 C 23 57.449219 22.550781 57 22 57 Z M 22 61 C 21.449219 61 21 61.449219 21 62 C 21 62.550781 21.449219 63 22 63 C 22.550781 63 23 62.550781 23 62 C 23 61.449219 22.550781 61 22 61 Z M 22 65 C 21.449219 65 21 65.449219 21 66 C 21 66.550781 21.449219 67 22 67 C 22.550781 67 23 66.550781 23 66 C 23 65.449219 22.550781 65 22 65 Z\" />\n                          </svg>\n                          {i.filename}\n                        </span>\n                      </p>\n                      {i.sender.id !== currentUser.id ? (\n                        <>\n                          <Icons\n                            type=\"Download\"\n                            onClick={() => handleDownload(i.text, i.filename)}\n                          />\n                          <span>{i.date}</span>\n                        </>\n                      ) : (\n                        <span style={{ marginTop: \"3px\", padding: \"unset\" }}>\n                          <span>{i.date}</span>\n                          <Icons\n                            type=\"Download\"\n                            onClick={() => handleDownload(i.text, i.filename)}\n                          />\n                        </span>\n                      )}\n                    </>\n                  ) : (\n                    <>\n                      <span>{i.sender.name}</span>\n                      {i.sender.id !== currentUser.id ? (\n                        <div style={{ display: \"flex\" }}>\n                          <Avatars\n                            size=\"30\"\n                            name={i.sender.name}\n                            round={true}\n                          />\n                          <p>{i.text}</p>\n                        </div>\n                      ) : (\n                        <div style={{ display: \"flex\", justifyContent: \"end\" }}>\n                          <p>{i.text}</p>\n                          <Avatars\n                            googleId=\"118096717852922241760\"\n                            size=\"30\"\n                            name={i.sender.name}\n                            round={true}\n                          />\n                        </div>\n                      )}\n\n                      <span>{i.date}</span>\n                    </>\n                  )}\n                </div>\n              ))}\n            </div>\n            <div className=\"send\">\n              <input\n                placeholder=\"Enter Your Message\"\n                value={text}\n                style={{\n                  cursor: submitted ? \"not-allowed\" : \"text\",\n                  opacity: submitted ? 0.5 : 1,\n                }}\n                disabled={submitted}\n                onChange={(e) => setText(e.target.value)}\n                ref={(input) => (input = input)}\n                onKeyPress={(e) => {\n                  if (e.key === \"Enter\") {\n                    sendData();\n                  }\n                  if (e.key === \"Enter\" && e.shiftKey) {\n                    console.log(\"shift + enter\");\n                    e.preventDefault();\n                  }\n                }}\n              ></input>\n              <BsEmojiSmile onClick={openEmoji} style={{ cursor: \"pointer\" }} />\n              <div className=\"btn-box1\" onClick={() => imageupload()}>\n                <Icons className=\"svgIcon\" type=\"attachemt\" />\n              </div>\n              <div\n                className=\"btn-box\"\n                onClick={\n                  !submitted\n                    ? () => sendData()\n                    : () =>\n                        message.error({\n                          content: \"Select User to Send Message\",\n                        })\n                }\n              >\n                <RiSendPlaneLine className=\"btn-icon\" />\n              </div>\n            </div>\n          </>\n        )}\n\n        {/* upload file modal */}\n\n        <ModalField\n          visible={openModal}\n          title=\"Attachment\"\n          className=\"uploadmodal\"\n          onCancel={() => {\n            setOpenModal(false);\n            setFiles([]);\n            setFileLoading(false);\n          }}\n          footer={false}\n        >\n          <Upload\n            name=\"avatar\"\n            accept=\"crt\"\n            multiple\n            showUploadList={false}\n            onChange={(e) => {\n              addFile(e);\n            }}\n            className=\"uploadBox\"\n          >\n            <p className=\"ant-upload-drag-icon\">\n              <InboxOutlined />\n            </p>\n            <p className=\"ant-upload-text\">Click to this area to upload file</p>\n          </Upload>\n          <div\n            style={{\n              maxHeight: \"100px\",\n              overflow: \"auto\",\n              marginTop: \"15px\",\n            }}\n            className=\"overflowDiv\"\n          >\n            {files.length !== 0 &&\n              files.map((file, index) => (\n                <div\n                  className=\"controlLabel\"\n                  key={index}\n                  style={{ marginTop: \"15px\" }}\n                >\n                  {file.name}\n                  {`(${file.size / 1000} KB)`}\n                  {cancelUploadDisable ? (\n                    \"\"\n                  ) : (\n                    <Icons\n                      type=\"close\"\n                      icontype=\"globle\"\n                      id={`iFiles_close${index}`}\n                      className=\"removeFiles\"\n                      margin=\"10px\"\n                      onClick={() => removeFile(index)}\n                    />\n                  )}\n                </div>\n              ))}\n          </div>\n          <div className=\"footerContent\">\n            {files.length > 0 ? (\n              <Button\n                id=\"warroom_upload\"\n                disabled={fileStatus.includes(false) || false}\n                loading={fileLoading}\n                onClick={addWarroomFile}\n              >\n                Upload\n              </Button>\n            ) : null}\n          </div>\n        </ModalField>\n\n        {/* preview image */}\n        {/* {console.log(images, currentImage)} */}\n        {isViewerOpen && (\n          <ImageViewer\n            src={images}\n            currentIndex={currentImage}\n            onClose={closeImageViewer}\n          />\n        )}\n        {openEmojiModel && (\n          <Picker\n            set=\"google\"\n            showPreview={false}\n            style={{\n              position: \"absolute\",\n              bottom: \"160px\",\n              right: \"150px\",\n              borderRadius: \"10px 10px 0px 10px\",\n            }}\n            onSelect={(e) => selectedEmoji(e)}\n          />\n        )}\n      </div>\n    </ChatStyle>\n  );\n};\nexport default Chat;\n","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\GroupChat\\GroupChat.js",["211","212"],"/* eslint-disable no-unused-vars */\r\nimport { Avatar, Button, message, Upload } from \"antd\";\r\nimport axios from \"axios\";\r\nimport Avatars from \"react-avatar\";\r\nimport ImageViewer from \"react-simple-image-viewer\";\r\nimport moment from \"moment\";\r\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { RiSendPlaneLine } from \"react-icons/ri\";\r\nimport Icons from \"../../component/Icons/Icons\";\r\nimport ModalField from \"../../component/Modal/ModalDemo\";\r\nimport APi from \"../../core/chatRedux/axios\";\r\nimport { getData } from \"../../core/locaStorage/Local\";\r\nimport ScrollToBottom from \"react-scroll-to-bottom\";\r\nimport { GroupStyle } from \"./GroupStyle\";\r\nimport \"./GroupChatStyle.scss\";\r\n\r\nconst GroupChat = ({ socket, selectedGroup, userExist }) => {\r\n  // const {} = props;\r\n  const [text, setText] = useState(\"\");\r\n  const [recieverD, setRecieverD] = useState({});\r\n  const [messages, setMessages] = useState([]);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [cancelUploadDisable, setcancelUploadDisable] = useState(false);\r\n  const [images, setImages] = useState([]);\r\n  const [groupDeail, setGroupDetail] = useState([]);\r\n  const messageEl = useRef(null);\r\n\r\n  const [fileStatus, setFileStatus] = useState([]);\r\n  const [files, setFiles] = useState([]);\r\n  const [fileLoading, setFileLoading] = useState(false);\r\n  const [alerted, setAlerted] = useState(false);\r\n\r\n  const [tagModel, setTagModel] = useState(false);\r\n  const [tagname, settagname] = useState(\"\");\r\n  const [tagList, settagList] = useState([]);\r\n\r\n  const ref = useRef(\"\");\r\n\r\n  messages.sort(function (a, b) {\r\n    return a.date.localeCompare(b.date);\r\n  });\r\n\r\n  const onchange = (event) => {\r\n    const value = event.target.value;\r\n    if (value.endsWith(\"@\")) {\r\n      setTagModel(true);\r\n      APi.getAllUsers({\r\n        Authorization: `Bearer ${getData(\"user\").token}`,\r\n      })\r\n        .then((res) => {\r\n          settagList([...res.data.data]);\r\n        })\r\n        .catch(() => {\r\n          settagList([]);\r\n        });\r\n    }\r\n    if (value === \"\") {\r\n      setTagModel(false);\r\n    }\r\n    setText(value);\r\n  };\r\n\r\n  const closeTagModel = () => {\r\n    setTagModel(false);\r\n    settagname(\"\");\r\n  };\r\n\r\n  const addTagName = (user) => {\r\n    console.log(\"user\", user);\r\n    let addName = text + user.name + \" \";\r\n    setText(addName);\r\n    setTagModel(false);\r\n  };\r\n\r\n  const tagNameFilter = (event) => {\r\n    const value = event.target.value;\r\n    settagname(value);\r\n\r\n    APi.getAllUsers({\r\n      Authorization: `Bearer ${getData(\"user\").token}`,\r\n    })\r\n      .then((res) => {\r\n        const list = [...res.data.data];\r\n        const filterList = list.filter((item) => {\r\n          if (item.name.match(value, \"/gi\")) {\r\n            return item;\r\n          }\r\n        });\r\n        settagList(filterList);\r\n      })\r\n      .catch(() => {\r\n        settagList([]);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // setMessages([]);\r\n    if (recieverD && Object.keys(recieverD).length === 0) {\r\n      // setSubmitted(true);\r\n    } else {\r\n      // setSubmitted(false);\r\n    }\r\n  }, [recieverD]);\r\n\r\n  // select Group\r\n\r\n  useEffect(() => {\r\n    setMessages([]);\r\n    const groupData = getData(\"selectedGroup\");\r\n    if (groupData && Object.keys(groupData).length !== 0) {\r\n      // setSubmitted(true);\r\n      setGroupDetail(groupData);\r\n    } else {\r\n      setGroupDetail({});\r\n    }\r\n    if (groupData && Object.keys(groupData).length !== 0) {\r\n      const user = getData(\"user\");\r\n      socket.emit(\"messageGroupHistory\", {\r\n        sender: user.id,\r\n        groupId: groupData.groupId,\r\n        header: { auth_token: getData(\"user\").token },\r\n      });\r\n    }\r\n  }, [selectedGroup]);\r\n\r\n  useEffect(() => {\r\n    const user = getData(\"user\");\r\n    setCurrentUser(user);\r\n  }, []);\r\n\r\n  const sendData = () => {\r\n    if (text !== \"\" && currentUser) {\r\n      //final data\r\n      let data = {\r\n        sender: getData(\"user\"),\r\n        type: \"chat\",\r\n        message: text,\r\n        groupId: getData(\"selectedGroup\").groupId,\r\n        sentAt: new Date(),\r\n      };\r\n\r\n      data.header = {};\r\n      data.header.auth_token = getData(\"user\").token;\r\n      console.log(data, \"......###\");\r\n      socket.emit(\"groupMessages\", data);\r\n      setText(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"groupMessagesResponse\", (message) => {\r\n      console.log(\"mess\", message);\r\n      if (getData(\"selectedGroup\")) {\r\n        if (message.groupId === getData(\"selectedGroup\").groupId) {\r\n          let temp = {\r\n            type: message.type ? message.type : null,\r\n            sender: message.sender,\r\n            text: message.message,\r\n            date: moment(message.sendAt).format(\"YYYY-MM-DD HH:mm:ss\"),\r\n            filename: message.filename,\r\n          };\r\n          setMessages((prev) => {\r\n            prev.push(temp);\r\n            return prev;\r\n          });\r\n\r\n          setFileLoading(false);\r\n          setOpenModal(false);\r\n          setFiles([]);\r\n        }\r\n      }\r\n    });\r\n    socket.on(\"messageGroupHistoryResponse\", (message) => {\r\n      let temp = {\r\n        type: message.type ? message.type : null,\r\n        sender: message.sender,\r\n        text: message.message,\r\n        date: moment(message.sent_at).format(\"YYYY-MM-DD HH:mm:ss\"),\r\n        filename: message.filename,\r\n      };\r\n      setMessages((prev) => {\r\n        prev.push(temp);\r\n        return prev;\r\n      });\r\n      setFileLoading(false);\r\n      setOpenModal(false);\r\n      setFiles([]);\r\n    });\r\n  }, [socket]);\r\n\r\n  // upload\r\n  const addFile = (e) => {\r\n    // setAlerted(false);\r\n    const onlyFiles = [...files];\r\n    const dd = files.findIndex((eee) => eee.name === e.file.originFileObj.name);\r\n    if (e.file.type !== \"\") {\r\n      if (dd === -1) {\r\n        const fsize = e.file.size;\r\n        const file = Math.round(fsize / 1024);\r\n        if (file >= 4096) {\r\n          if (alerted === false) {\r\n            // message.error(\"please select a file less than 4mb\");\r\n            setAlerted(true);\r\n          }\r\n        } else {\r\n          onlyFiles.push(e.file.originFileObj);\r\n        }\r\n      }\r\n      setFiles([...onlyFiles]);\r\n    } else {\r\n      if (alerted === false) {\r\n        // message.error(\"Unknown File Type !\");\r\n        setAlerted(true);\r\n      }\r\n    }\r\n    setTimeout(() => {\r\n      setAlerted(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const removeFile = (index) => {\r\n    const dataList = files;\r\n    dataList.splice(index, 1);\r\n    setFiles([...dataList]);\r\n    const fileStatusSet = fileStatus;\r\n    fileStatusSet.splice(index, 1);\r\n    setFileStatus([...fileStatusSet]);\r\n  };\r\n\r\n  // submit file\r\n\r\n  const addWarroomFile = (imageFile) => {\r\n    setcancelUploadDisable(true);\r\n    setFileLoading(true);\r\n\r\n    const f = [];\r\n\r\n    imageFile.forEach((dd, index) => {\r\n      f[index] = { index: index, image: dd };\r\n    });\r\n\r\n    if (currentUser && groupDeail) {\r\n      const form = new FormData();\r\n      imageFile.forEach((element) => {\r\n        form.append(\"files\", element);\r\n      });\r\n      form.append(\"sender\", currentUser.id);\r\n      form.append(\"groupId\", groupDeail.groupId);\r\n      form.append(\"type\", \"image\");\r\n\r\n      APi.groupFileUpload(form)\r\n        .then((res) => {\r\n          console.log(res, \"fileResponse\");\r\n          const s = {};\r\n          s.header = {};\r\n          s.header.auth_token = getData(\"user\").token;\r\n          s.files = [...res.data.data];\r\n          console.log(s);\r\n          socket.emit(\"groupFileUpload\", s);\r\n          setOpenModal(false);\r\n          setFileLoading(false);\r\n          setFiles([]);\r\n          setcancelUploadDisable(false);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n          setcancelUploadDisable(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  // download logic\r\n\r\n  const handleDonl = (file, filename) => {\r\n    const url = window.URL.createObjectURL(new Blob([file]));\r\n    const link = document.createElement(\"a\");\r\n    link.href = url;\r\n    link.setAttribute(\"download\", filename);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n  };\r\n\r\n  // handle image download\r\n\r\n  const handleDownload = (url, filename) => {\r\n    axios\r\n      .get(url, {\r\n        responseType: \"blob\",\r\n      })\r\n      .then((res) => {\r\n        handleDonl(res.data, filename);\r\n      });\r\n  };\r\n\r\n  // image preview\r\n\r\n  const openImageViewer = useCallback((index, i) => {\r\n    setCurrentImage(index);\r\n    setImages([i]);\r\n    setIsViewerOpen(true);\r\n  }, []);\r\n\r\n  const closeImageViewer = () => {\r\n    setCurrentImage(0);\r\n    setImages([]);\r\n    setIsViewerOpen(false);\r\n  };\r\n  const imageupload = () => {\r\n    const value = ref.current.click();\r\n  };\r\n  const onImageChange = (event) => {\r\n    event.preventDefault();\r\n    let files = event.target.files;\r\n\r\n    let temp = [];\r\n    for (let a in files) {\r\n      temp.push(files[a]);\r\n    }\r\n    let aban = temp.splice(0, temp.length - 2);\r\n    setImages(aban);\r\n    addWarroomFile(aban);\r\n  };\r\n  return (\r\n    <GroupStyle>\r\n      {/* file upload input  */}\r\n      <input\r\n        type=\"file\"\r\n        onChange={(event) => onImageChange(event)}\r\n        ref={ref}\r\n        style={{ display: \"none\" }}\r\n        multiple\r\n      />\r\n      <div className=\"chat\">\r\n        {userExist === false || Object.keys(groupDeail).length === 0 ? (\r\n          <div className=\"nodata-page\">\r\n            <Icons type=\"moontech\" />\r\n            <span\r\n              style={{\r\n                fontWeight: \"bolder\",\r\n                fontSize: \"20px\",\r\n                color: \"#70bde9\",\r\n              }}\r\n            >\r\n              No conversation selected\r\n            </span>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"user-name\">\r\n              <h2>\r\n                <Avatar\r\n                  style={{ cursor: \"pointer\" }}\r\n                  size={{\r\n                    xs: 30,\r\n                    sm: 30,\r\n                    md: 30,\r\n                    lg: 30,\r\n                    xl: 30,\r\n                  }}\r\n                >\r\n                  {groupDeail.groupName\r\n                    ? `${groupDeail.groupName.charAt(0)}`\r\n                    : null}\r\n                </Avatar>\r\n                {groupDeail.groupName && Object.keys(groupDeail).length !== 0\r\n                  ? groupDeail.groupName\r\n                  : \"_ _ _\"}\r\n              </h2>\r\n            </div>\r\n            <div\r\n              className=\"chat-message\"\r\n              ref={(ref) => {\r\n                if (ref !== null) {\r\n                  ref.addEventListener(\"DOMNodeInserted\", (event) => {\r\n                    const { currentTarget: target } = event;\r\n                    target.scroll({\r\n                      top: target.scrollHeight,\r\n                      behavior: \"smooth\",\r\n                    });\r\n                  });\r\n                }\r\n              }}\r\n            >\r\n              {messages.map((i, index) => (\r\n                <div\r\n                  className={\r\n                    i.sender.id === currentUser.id\r\n                      ? \"message mess-right\"\r\n                      : \"message\"\r\n                  }\r\n                  key={index}\r\n                >\r\n                  {i.type === \"image\" ? (\r\n                    <>\r\n                      <span>{i.sender.name}</span>\r\n\r\n                      <p\r\n                        className={\r\n                          i.sender.id !== currentUser.id\r\n                            ? \"img hoverable\"\r\n                            : \"img\"\r\n                        }\r\n                      >\r\n                        <img\r\n                          src={`${i.text}`}\r\n                          onClick={() => openImageViewer(0, i.text)}\r\n                          alt=\"img\"\r\n                          style={{ cursor: \"pointer\" }}\r\n                        />\r\n                      </p>\r\n                      {i.sender.id !== currentUser.id ? (\r\n                        <>\r\n                          <Icons\r\n                            type=\"Download\"\r\n                            onClick={() => handleDownload(i.text, i.filename)}\r\n                          />\r\n                          <span>{i.date}</span>\r\n                        </>\r\n                      ) : (\r\n                        <span style={{ marginTop: \"3px\", padding: \"unset\" }}>\r\n                          <span>{i.date}</span>\r\n                          <Icons\r\n                            type=\"Download\"\r\n                            onClick={() => handleDownload(i.text, i.filename)}\r\n                          />\r\n                        </span>\r\n                      )}\r\n                    </>\r\n                  ) : i.type === \"file\" ? (\r\n                    <>\r\n                      <span>{i.sender.name}</span>\r\n                      <p\r\n                        className={\r\n                          i.sender.id !== currentUser.id\r\n                            ? \"img hoverable\"\r\n                            : \"img\"\r\n                        }\r\n                        style={{ width: \"100%\", height: \"auto\" }}\r\n                      >\r\n                        <span\r\n                          style={{\r\n                            display: \"flex\",\r\n                            wordBreak: \"break-all\",\r\n                          }}\r\n                          className={\r\n                            i.sender.id === currentUser.id\r\n                              ? \"fileType-right\"\r\n                              : \"fileType\"\r\n                          }\r\n                        >\r\n                          <svg\r\n                            fill=\"#000000\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            viewBox=\"0 0 80 80\"\r\n                            width=\"18px\"\r\n                            height=\"18px\"\r\n                          >\r\n                            <path d=\"M 15 9 L 15 71 L 65 71 L 65 23.585938 L 50.414063 9 Z M 17 11 L 49 11 L 49 25 L 63 25 L 63 69 L 17 69 Z M 51 12.414063 L 61.585938 23 L 51 23 Z M 22 13 C 21.449219 13 21 13.449219 21 14 C 21 14.550781 21.449219 15 22 15 C 22.550781 15 23 14.550781 23 14 C 23 13.449219 22.550781 13 22 13 Z M 22 17 C 21.449219 17 21 17.449219 21 18 C 21 18.550781 21.449219 19 22 19 C 22.550781 19 23 18.550781 23 18 C 23 17.449219 22.550781 17 22 17 Z M 22 21 C 21.449219 21 21 21.449219 21 22 C 21 22.550781 21.449219 23 22 23 C 22.550781 23 23 22.550781 23 22 C 23 21.449219 22.550781 21 22 21 Z M 22 25 C 21.449219 25 21 25.449219 21 26 C 21 26.550781 21.449219 27 22 27 C 22.550781 27 23 26.550781 23 26 C 23 25.449219 22.550781 25 22 25 Z M 22 29 C 21.449219 29 21 29.449219 21 30 C 21 30.550781 21.449219 31 22 31 C 22.550781 31 23 30.550781 23 30 C 23 29.449219 22.550781 29 22 29 Z M 22 33 C 21.449219 33 21 33.449219 21 34 C 21 34.550781 21.449219 35 22 35 C 22.550781 35 23 34.550781 23 34 C 23 33.449219 22.550781 33 22 33 Z M 22 37 C 21.449219 37 21 37.449219 21 38 C 21 38.550781 21.449219 39 22 39 C 22.550781 39 23 38.550781 23 38 C 23 37.449219 22.550781 37 22 37 Z M 22 41 C 21.449219 41 21 41.449219 21 42 C 21 42.550781 21.449219 43 22 43 C 22.550781 43 23 42.550781 23 42 C 23 41.449219 22.550781 41 22 41 Z M 22 45 C 21.449219 45 21 45.449219 21 46 C 21 46.550781 21.449219 47 22 47 C 22.550781 47 23 46.550781 23 46 C 23 45.449219 22.550781 45 22 45 Z M 22 49 C 21.449219 49 21 49.449219 21 50 C 21 50.550781 21.449219 51 22 51 C 22.550781 51 23 50.550781 23 50 C 23 49.449219 22.550781 49 22 49 Z M 22 53 C 21.449219 53 21 53.449219 21 54 C 21 54.550781 21.449219 55 22 55 C 22.550781 55 23 54.550781 23 54 C 23 53.449219 22.550781 53 22 53 Z M 22 57 C 21.449219 57 21 57.449219 21 58 C 21 58.550781 21.449219 59 22 59 C 22.550781 59 23 58.550781 23 58 C 23 57.449219 22.550781 57 22 57 Z M 22 61 C 21.449219 61 21 61.449219 21 62 C 21 62.550781 21.449219 63 22 63 C 22.550781 63 23 62.550781 23 62 C 23 61.449219 22.550781 61 22 61 Z M 22 65 C 21.449219 65 21 65.449219 21 66 C 21 66.550781 21.449219 67 22 67 C 22.550781 67 23 66.550781 23 66 C 23 65.449219 22.550781 65 22 65 Z\" />\r\n                          </svg>\r\n                          {i.filename}{\" \"}\r\n                        </span>\r\n                      </p>\r\n                      {i.sender.id !== currentUser.id ? (\r\n                        <>\r\n                          <Icons\r\n                            type=\"Download\"\r\n                            onClick={() => handleDownload(i.text, i.filename)}\r\n                          />\r\n                          <span>{i.date}</span>\r\n                        </>\r\n                      ) : (\r\n                        <span style={{ marginTop: \"3px\", padding: \"unset\" }}>\r\n                          <span>{i.date}</span>\r\n                          <Icons\r\n                            type=\"Download\"\r\n                            onClick={() => handleDownload(i.text, i.filename)}\r\n                          />\r\n                        </span>\r\n                      )}\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <span>{i.sender.name}</span>\r\n                      {i.sender.id !== currentUser.id ? (\r\n                        <div style={{ display: \"flex\" }}>\r\n                          <Avatars\r\n                            size=\"30\"\r\n                            name={i.sender.name}\r\n                            round={true}\r\n                          />\r\n                          <p>{i.text}</p>\r\n                        </div>\r\n                      ) : (\r\n                        <div style={{ display: \"flex\", justifyContent: \"end\" }}>\r\n                          <p>{i.text}</p>\r\n                          <Avatars\r\n                            googleId=\"118096717852922241760\"\r\n                            size=\"30\"\r\n                            name={i.sender.name}\r\n                            round={true}\r\n                          />\r\n                        </div>\r\n                      )}\r\n\r\n                      <span>{i.date}</span>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"send\">\r\n              <input\r\n                placeholder=\"Enter Your Message\"\r\n                value={text}\r\n                style={{\r\n                  cursor: submitted ? \"not-allowed\" : \"text\",\r\n                  opacity: submitted ? 0.5 : 1,\r\n                }}\r\n                disabled={submitted}\r\n                onChange={(e) => {\r\n                  setText(e.target.value);\r\n                }}\r\n                onKeyPress={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    sendData();\r\n                  }\r\n                }}\r\n              ></input>\r\n              <div className=\"btn-box1\" onClick={() => imageupload()}>\r\n                <Icons className=\"svgIcon\" type=\"attachemt\" />\r\n              </div>\r\n              <div\r\n                className=\"btn-box\"\r\n                onClick={\r\n                  !submitted\r\n                    ? () => sendData()\r\n                    : () =>\r\n                        message.error({\r\n                          content: \"Select User to Send Message\",\r\n                        })\r\n                }\r\n              >\r\n                <RiSendPlaneLine className=\"btn-icon\" />\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {isViewerOpen && (\r\n          <ImageViewer\r\n            src={images}\r\n            currentIndex={currentImage}\r\n            onClose={closeImageViewer}\r\n          />\r\n        )}\r\n        <ModalField\r\n          visible={tagModel}\r\n          title=\"Attachment\"\r\n          className=\"uploadmodal\"\r\n          onCancel={closeTagModel}\r\n          footer={false}\r\n        >\r\n          <div\r\n            style={{\r\n              maxHeight: \"100px\",\r\n              overflow: \"auto\",\r\n              marginTop: \"15px\",\r\n            }}\r\n            className=\"overflowDiv\"\r\n          >\r\n            <div>\r\n              <input\r\n                autoFocus\r\n                value={tagname}\r\n                onChange={(e) => tagNameFilter(e)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <ScrollToBottom>\r\n                {tagList.map((item) => (\r\n                  <div onClick={() => addTagName(item)}>{item.name}</div>\r\n                ))}\r\n              </ScrollToBottom>\r\n            </div>\r\n          </div>\r\n        </ModalField>\r\n      </div>\r\n    </GroupStyle>\r\n  );\r\n};\r\n\r\nexport default GroupChat;\r\n","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\sidebar\\Sidebar.js",["213","214","215","216","217","218"],"import { Avatar, Button, Popover } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport Icons from \"../../component/Icons/Icons\";\r\nimport ModalField from \"../../component/Modal/ModalDemo\";\r\nimport axios from \"../../core/chatRedux/axios\";\r\nimport GroupSidebar from \"../sidebarGroup/GroupSidebar\";\r\nimport { SideBarStyle } from \"./SidebarStyle\";\r\nimport ScrollToBottom from \"react-scroll-to-bottom\";\r\nimport { getData, setData } from \"../../core/locaStorage/Local\";\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport { CgTrash } from \"react-icons/cg\";\r\nimport { GoPlus } from \"react-icons/go\";\r\nimport { IoLogOutOutline } from \"react-icons/io5\";\r\nconst Sidebar = ({\r\n  setSelectedUser,\r\n  socket,\r\n  setSelectedGroup,\r\n  setUserExist,\r\n}) => {\r\n  const history = useHistory();\r\n  const [userListData, setuserListData] = useState([]);\r\n  const [newUserListData, setNewUserListData] = useState([]);\r\n  const [dVisible, setDVisible] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [getUser, setgetUser] = useState([]);\r\n  const [searchName, setsearchName] = useState(\"\");\r\n  const [groupExist, setGroupExist] = useState(false);\r\n  const [deleteModel, setdeleteModel] = useState(false);\r\n  const [deleteUser, setdeleteUser] = useState({});\r\n  const [onlineUserList, setonlineUserList] = useState([]);\r\n\r\n  let final = [];\r\n\r\n  useEffect(() => {\r\n    let sender = getData(\"user\");\r\n    socket.emit(\"chatUserHistory\", {\r\n      sender: sender.id,\r\n      header: { auth_token: getData(\"user\").token },\r\n    });\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"resList\", (message) => {\r\n      const userData = getData(\"user\");\r\n      const list = [...message.users];\r\n      const index = list.findIndex((e) => e.id === userData.id);\r\n      if (index !== -1) {\r\n        list.splice(index, 1);\r\n      }\r\n      const ids = list.map((o) => o.id);\r\n      const filtered = list.filter(\r\n        ({ id }, index) => !ids.includes(id, index + 1)\r\n      );\r\n      setuserListData(filtered);\r\n      setUserExist(true);\r\n      setData(\"receiver\", list);\r\n    });\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    if (groupExist) {\r\n      setUserExist(true);\r\n    } else {\r\n      setUserExist(false);\r\n    }\r\n  }, [groupExist]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"newMessage\", (data) => {\r\n      setuserListData((prev) => {\r\n        console.log(data, \"data////////////\");\r\n        const list = [...prev];\r\n        const index = list.findIndex((e) => e.id === data.sender.id);\r\n        console.log(\"list\", list);\r\n        console.log(\"index\", index);\r\n        console.log(\"selectedUser\", getData(\"selectedUser\"));\r\n\r\n        if (index !== -1) {\r\n          if (getData(\"selectedUser\")) {\r\n            if (list[index].id !== getData(\"selectedUser\").id) {\r\n              list[index].newM = true;\r\n              return list;\r\n            }\r\n          } else {\r\n            list[index].newM = true;\r\n            return list;\r\n          }\r\n        } else {\r\n          const localUserList = getData(\"localUserList\");\r\n          const l2 = [...localUserList];\r\n          const i2 = l2.findIndex((e) => e.id === data.sender.id);\r\n          if (i2 !== -1) {\r\n            console.log(\"gyu\");\r\n            l2[i2].newM = true;\r\n            list.unshift(l2[i2]);\r\n            return list;\r\n          } else {\r\n            console.log(\"na gyu\", data.sender, list);\r\n            data.sender.newM = true;\r\n            list.push(data.sender);\r\n            return list;\r\n          }\r\n        }\r\n        return list;\r\n      });\r\n    });\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"mousedown\", (e) => {\r\n      if (dVisible) {\r\n        if (document.getElementById(\"open\")) {\r\n          if (!document.getElementById(\"open\").contains(e.target)) {\r\n            setDVisible(false);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }, [dVisible]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"onlineUserList\", (mess) => {\r\n      console.log(\"onlineUserList\", mess.users);\r\n      setonlineUserList(mess.users);\r\n    });\r\n  }, [socket]);\r\n\r\n  const handleNewChat = (data) => {\r\n    setData(\"selectedUser\", data);\r\n    setSelectedUser(data);\r\n    const getalluser = getData(\"receiver\");\r\n    if (!getalluser) {\r\n      final.push(data);\r\n      setData(\"receiver\", final);\r\n      setuserListData(final);\r\n    } else {\r\n      if (getalluser.findIndex((ee) => ee.id === data.id) === -1) {\r\n        getalluser.push(data);\r\n        setData(\"receiver\", final);\r\n        setuserListData(getalluser);\r\n      }\r\n    }\r\n  };\r\n\r\n  const oncancelmodel = () => {\r\n    setOpenModal(false);\r\n    setsearchName(\"\");\r\n  };\r\n\r\n  const setActiveTab = (d) => {\r\n    setUserExist(true);\r\n    history.push(\"/chat\");\r\n    localStorage.removeItem(\"groupActive\");\r\n    localStorage.removeItem(\"selectedGroup\");\r\n    setuserListData((prev) => {\r\n      const list = [...prev];\r\n      const index = list.findIndex((e) => e.id === d.id);\r\n      if (index !== -1) {\r\n        delete list[index].newM;\r\n        console.log(list);\r\n        return list;\r\n      }\r\n      return list;\r\n    });\r\n    setData(\"selectedUser\", d);\r\n    setSelectedUser(d);\r\n  };\r\n\r\n  const handleOpenModel = () => {\r\n    setOpenModal(true);\r\n    axios\r\n      .getAllUsers({\r\n        Authorization: `Bearer ${getData(\"token\")}`,\r\n      })\r\n      .then((res) => {\r\n        if (res.data.status === true) {\r\n          const userData = getData(\"user\");\r\n          const list = [...res.data.data];\r\n          const index = list.findIndex((e) => e.id === userData.id);\r\n          if (index !== -1) {\r\n            list.splice(index, 1);\r\n          }\r\n          setgetUser(list);\r\n        } else {\r\n          setgetUser([]);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setgetUser([]);\r\n      });\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    let value = e.target.value;\r\n    setsearchName(value);\r\n    axios\r\n      .getAllUsers({\r\n        Authorization: `Bearer ${getData(\"token\")}`,\r\n      })\r\n      .then((res) => {\r\n        if (res.data.status === true) {\r\n          const userData = getData(\"user\");\r\n          const list = [...res.data.data];\r\n          const index = list.findIndex((e) => e.id === userData.id);\r\n          if (index !== -1) {\r\n            list.splice(index, 1);\r\n          }\r\n          let regString = new RegExp(value, \"gi\");\r\n          let filterdata = list.filter((item) => {\r\n            if (item.name.match(regString)) {\r\n              return item;\r\n            }\r\n          });\r\n          // setuserListData(filterdata);\r\n          setgetUser(filterdata);\r\n        } else {\r\n          setgetUser([]);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setgetUser([]);\r\n      });\r\n  };\r\n\r\n  const addToMyChat = (user) => {\r\n    localStorage.removeItem(\"groupActive\");\r\n    setData(\"selectedUser\", user);\r\n    setSelectedUser(user);\r\n    const getalluser = getData(\"receiver\");\r\n    if (!getalluser) {\r\n      final.unshift(user);\r\n      setData(\"receiver\", final);\r\n      setuserListData(final);\r\n    } else {\r\n      if (getalluser.findIndex((ee) => ee.id === user.id) === -1) {\r\n        getalluser.unshift(user);\r\n        setData(\"receiver\", getalluser);\r\n        setuserListData(getalluser);\r\n      }\r\n    }\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const onDelete = (item) => {\r\n    console.log(\"item\", item);\r\n    setdeleteModel(true);\r\n    setdeleteUser(item);\r\n  };\r\n\r\n  const deleteUserData = () => {\r\n    console.log(\"deleteUser\", deleteUser);\r\n    let deleteUserdata = userListData.filter(\r\n      (user) => user.id !== deleteUser.id\r\n    );\r\n    setuserListData(deleteUserdata);\r\n    // socket called\r\n    // socket.emit(\"deleteUser\", deleteUser);\r\n    setdeleteModel(false);\r\n  };\r\n  let currentUser = getData(\"user\");\r\n  return (\r\n    <SideBarStyle className=\"sidebar\">\r\n      <header>\r\n        <div style={{ marginTop: \"10px\" }}>\r\n          <Avatar\r\n            size={{\r\n              xs: 30,\r\n              sm: 30,\r\n              md: 30,\r\n              lg: 30,\r\n              xl: 30,\r\n            }}\r\n          >\r\n            {!currentUser.name ? null : `${currentUser.name.charAt(0)}`}\r\n          </Avatar>\r\n          <p\r\n            style={{ height: \"25px\" }}\r\n            className=\"header--btn\"\r\n            onClick={() => {\r\n              setModal(true);\r\n            }}\r\n          >\r\n            <IoLogOutOutline style={{ height: \"20px\" }} />\r\n          </p>\r\n        </div>\r\n      </header>\r\n      <div\r\n        className=\"search\"\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <span>Chat's</span>\r\n        <GoPlus\r\n          onClick={handleOpenModel}\r\n          id=\"open\"\r\n          className={dVisible ? \"open\" : \"close\"}\r\n          style={{\r\n            cursor: \"pointer\",\r\n            verticalAlign: \"text-top\",\r\n            height: \"25px\",\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"chatList\">\r\n        {userListData.length === 0 ? (\r\n          <div className=\"nodata\">NO USER FOUND</div>\r\n        ) : (\r\n          userListData.map((item, key) => (\r\n            <div\r\n              className=\"chatListItem\"\r\n              key={key}\r\n              onClick={() => setActiveTab(item, key)}\r\n            >\r\n              <div\r\n                className=\"chat-main-status\"\r\n                style={{\r\n                  background:\r\n                    onlineUserList &&\r\n                    onlineUserList.length !== 0 &&\r\n                    onlineUserList.findIndex((ee) => ee.id === item.id) === -1\r\n                      ? \"#707C97\"\r\n                      : \"#00c305\",\r\n                }}\r\n              />\r\n              <Avatar\r\n                style={{ cursor: \"pointer\", marginLeft: \"5px\" }}\r\n                size={{\r\n                  xs: 30,\r\n                  sm: 30,\r\n                  md: 30,\r\n                  lg: 30,\r\n                  xl: 30,\r\n                }}\r\n              >\r\n                {!item.name ? null : `${item.name.charAt(0)}`}\r\n              </Avatar>\r\n\r\n              <div className=\"chatListItem--lines\">\r\n                <div className=\"chatListItem--line\">\r\n                  <div className=\"chatListItem--name\">{item.name}</div>\r\n                  {item.newM ? (\r\n                    <div className=\"chatlistItem--date\">\r\n                      <Icons type=\"newMessage\" />\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"chatListItem--line\">\r\n                  <div className=\"chatListItem--LastMsg\">\r\n                    <p>{item.email}</p>\r\n                  </div>\r\n                  <Popover\r\n                    placement=\"rightTop\"\r\n                    title=\"Title\"\r\n                    content={\r\n                      <div\r\n                        onClick={() => onDelete(item)}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      >\r\n                        <CgTrash />\r\n                        Delete\r\n                      </div>\r\n                    }\r\n                    trigger=\"click\"\r\n                  >\r\n                    <BsThreeDotsVertical />\r\n                  </Popover>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n      <GroupSidebar\r\n        setSelectedGroup={setSelectedGroup}\r\n        socket={socket}\r\n        setGroupExist={setGroupExist}\r\n      />\r\n      <ModalField\r\n        visible={modal}\r\n        title=\"Logout User\"\r\n        className=\"uploadmodal\"\r\n        onCancel={() => {\r\n          setModal(false);\r\n        }}\r\n        footer={[\r\n          <Button\r\n            key=\"submitPost\"\r\n            onClick={() => {\r\n              localStorage.clear();\r\n              history.push(\"/\");\r\n            }}\r\n          >\r\n            Logout\r\n          </Button>,\r\n          <Button\r\n            key=\"cancelpost\"\r\n            type=\"primary\"\r\n            onClick={() => setModal(false)}\r\n          >\r\n            Cancel\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <span className=\"permission\">Are you sure want to logout ?</span>\r\n      </ModalField>\r\n\r\n      <ModalField\r\n        visible={openModal}\r\n        className=\"uploadmodal\"\r\n        onCancel={oncancelmodel}\r\n        footer={false}\r\n        title=\"Find A Person\"\r\n      >\r\n        <div className=\"overflowDiv\">\r\n          <input\r\n            value={searchName}\r\n            placeholder=\"Search Person To Chat\"\r\n            onChange={(e) => onChange(e)}\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"45px\",\r\n              borderRadius: \"20px\",\r\n              borderColor: \"#707070\",\r\n              fontSize: \"15px\",\r\n              paddingLeft: \"10px\",\r\n            }}\r\n          />\r\n          <div\r\n            className=\"userList\"\r\n            style={{ marginTop: \"15px\", overflow: \"auto\", height: \"300px\" }}\r\n          >\r\n            <ScrollToBottom>\r\n              {getUser.length === 0 && (\r\n                <div\r\n                  className=\"controlLabel\"\r\n                  style={{\r\n                    marginTop: \"15px\",\r\n                    fontSize: \"17px\",\r\n                    cursor: \"pointer\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  NO DATA FOUND\r\n                </div>\r\n              )}\r\n              {getUser.length !== 0 &&\r\n                getUser.map((user, index) => (\r\n                  <div\r\n                    className=\"controlLabel\"\r\n                    key={index}\r\n                    style={{\r\n                      marginTop: \"15px\",\r\n                      fontSize: \"17px\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                    onClick={() => addToMyChat(user)}\r\n                  >\r\n                    {user.name}\r\n                  </div>\r\n                ))}\r\n            </ScrollToBottom>\r\n          </div>\r\n        </div>\r\n      </ModalField>\r\n\r\n      <ModalField\r\n        visible={deleteModel}\r\n        title=\"Delete this conversation?\"\r\n        className=\"uploadmodal\"\r\n        onCancel={() => {\r\n          setdeleteModel(false);\r\n        }}\r\n        footer={[\r\n          <Button\r\n            key=\"cancelpost\"\r\n            type=\"primary\"\r\n            onClick={() => setdeleteModel(false)}\r\n          >\r\n            Cancel\r\n          </Button>,\r\n          <Button danger onClick={deleteUserData}>\r\n            Delete\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <span className=\"permission\">\r\n          Deleting a conversation from your history is permanent. Other\r\n          participants can still view this conversation.\r\n        </span>\r\n      </ModalField>\r\n    </SideBarStyle>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\component\\Comman\\CommanStyle.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\component\\Input\\InputStyle.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\component\\Icons\\Icons.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\sidebar\\SidebarStyle.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\sidebarGroup\\GroupSidebar.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\component\\Modal\\ModalDemo.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\sidebarGroup\\GroupStyle.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\chat\\ChayStyle.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\chatAppFront\\src\\pages\\GroupChat\\GroupStyle.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\index.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\App.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\home\\home.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\core\\locaStorage\\Local.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\index.js",["219"],"C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\register\\index.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\home\\HomeStyle.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\component\\Comman\\Comman.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\component\\RegexList.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\component\\Input\\InputDemo.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\style.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\register\\style.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\core\\chatRedux\\axios.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\chat\\chat.js",["220","221","222"],"C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\GroupChat\\GroupChat.js",["223","224"],"C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\sidebar\\Sidebar.js",["225","226","227","228","229","230"],"C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\component\\Comman\\CommanStyle.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\component\\Input\\InputStyle.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\component\\Icons\\Icons.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\sidebar\\SidebarStyle.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\GroupChat\\GroupStyle.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\sidebarGroup\\GroupSidebar.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\component\\Modal\\ModalDemo.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\chat\\ChayStyle.js",[],"C:\\Users\\jeel\\mynodeproject\\data\\final_chat_applicaton\\final_chat_application\\client\\src\\pages\\sidebarGroup\\GroupStyle.js",[],{"ruleId":"231","severity":1,"message":"232","line":9,"column":20,"nodeType":"233","messageId":"234","endLine":9,"endColumn":27},{"ruleId":"235","severity":1,"message":"236","line":135,"column":13,"nodeType":"237","endLine":135,"endColumn":36},{"ruleId":"231","severity":1,"message":"238","line":300,"column":11,"nodeType":"233","messageId":"234","endLine":300,"endColumn":16},{"ruleId":"239","severity":1,"message":"240","line":505,"column":42,"nodeType":"233","messageId":"241","endLine":505,"endColumn":47},{"ruleId":"242","severity":1,"message":"243","line":88,"column":47,"nodeType":"244","messageId":"245","endLine":88,"endColumn":49},{"ruleId":"235","severity":1,"message":"246","line":128,"column":6,"nodeType":"247","endLine":128,"endColumn":21,"suggestions":"248"},{"ruleId":"231","severity":1,"message":"249","line":23,"column":10,"nodeType":"233","messageId":"234","endLine":23,"endColumn":25},{"ruleId":"231","severity":1,"message":"250","line":23,"column":27,"nodeType":"233","messageId":"234","endLine":23,"endColumn":45},{"ruleId":"235","severity":1,"message":"251","line":60,"column":6,"nodeType":"247","endLine":60,"endColumn":14,"suggestions":"252"},{"ruleId":"235","severity":1,"message":"251","line":68,"column":6,"nodeType":"247","endLine":68,"endColumn":18,"suggestions":"253"},{"ruleId":"231","severity":1,"message":"254","line":130,"column":9,"nodeType":"233","messageId":"234","endLine":130,"endColumn":22},{"ruleId":"242","severity":1,"message":"243","line":211,"column":47,"nodeType":"244","messageId":"245","endLine":211,"endColumn":49},{"ruleId":"231","severity":1,"message":"232","line":9,"column":20,"nodeType":"233","messageId":"234","endLine":9,"endColumn":27},{"ruleId":"235","severity":1,"message":"236","line":135,"column":13,"nodeType":"237","endLine":135,"endColumn":36},{"ruleId":"231","severity":1,"message":"238","line":300,"column":11,"nodeType":"233","messageId":"234","endLine":300,"endColumn":16},{"ruleId":"239","severity":1,"message":"240","line":505,"column":42,"nodeType":"233","messageId":"241","endLine":505,"endColumn":47},{"ruleId":"242","severity":1,"message":"243","line":88,"column":47,"nodeType":"244","messageId":"245","endLine":88,"endColumn":49},{"ruleId":"235","severity":1,"message":"246","line":128,"column":6,"nodeType":"247","endLine":128,"endColumn":21,"suggestions":"255"},{"ruleId":"231","severity":1,"message":"249","line":23,"column":10,"nodeType":"233","messageId":"234","endLine":23,"endColumn":25},{"ruleId":"231","severity":1,"message":"250","line":23,"column":27,"nodeType":"233","messageId":"234","endLine":23,"endColumn":45},{"ruleId":"235","severity":1,"message":"251","line":60,"column":6,"nodeType":"247","endLine":60,"endColumn":14,"suggestions":"256"},{"ruleId":"235","severity":1,"message":"251","line":68,"column":6,"nodeType":"247","endLine":68,"endColumn":18,"suggestions":"257"},{"ruleId":"231","severity":1,"message":"254","line":130,"column":9,"nodeType":"233","messageId":"234","endLine":130,"endColumn":22},{"ruleId":"242","severity":1,"message":"243","line":211,"column":47,"nodeType":"244","messageId":"245","endLine":211,"endColumn":49},"no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'rData' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'value' is assigned a value but never used.","no-self-assign","'input' is assigned to itself.","selfAssignment","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["258"],"'newUserListData' is assigned a value but never used.","'setNewUserListData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setUserExist'. Either include it or remove the dependency array. If 'setUserExist' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["259"],["260"],"'handleNewChat' is assigned a value but never used.",["261"],["262"],["263"],{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"264","fix":"270"},{"desc":"266","fix":"271"},{"desc":"268","fix":"272"},"Update the dependencies array to be: [selectedGroup, socket]",{"range":"273","text":"274"},"Update the dependencies array to be: [setUserExist, socket]",{"range":"275","text":"276"},"Update the dependencies array to be: [groupExist, setUserExist]",{"range":"277","text":"278"},{"range":"279","text":"274"},{"range":"280","text":"276"},{"range":"281","text":"278"},[3915,3930],"[selectedGroup, socket]",[2210,2218],"[setUserExist, socket]",[2349,2361],"[groupExist, setUserExist]",[3915,3930],[2210,2218],[2349,2361]]